/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "./src/renderer/components/card.scss":
/*!*******************************************!*\
  !*** ./src/renderer/components/card.scss ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9jYXJkLnNjc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2VybmVsLXNldHRpbmdzLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvY2FyZC5zY3NzP2VkYTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/components/card.scss\n");

/***/ }),

/***/ "./src/renderer/components/panel.scss":
/*!********************************************!*\
  !*** ./src/renderer/components/panel.scss ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9wYW5lbC5zY3NzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2tlcm5lbC1zZXR0aW5ncy8uL3NyYy9yZW5kZXJlci9jb21wb25lbnRzL3BhbmVsLnNjc3M/ZmI2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/renderer/components/panel.scss\n");

/***/ }),

/***/ "./src/renderer/components/updates.scss":
/*!**********************************************!*\
  !*** ./src/renderer/components/updates.scss ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy91cGRhdGVzLnNjc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2VybmVsLXNldHRpbmdzLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvdXBkYXRlcy5zY3NzP2Y0MmYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/components/updates.scss\n");

/***/ }),

/***/ "./src/renderer/components/card.tsx":
/*!******************************************!*\
  !*** ./src/renderer/components/card.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Icon\": () => (/* binding */ Icon),\n/* harmony export */   \"ToolButton\": () => (/* binding */ ToolButton),\n/* harmony export */   \"SwitchWrapper\": () => (/* binding */ SwitchWrapper),\n/* harmony export */   \"openItem\": () => (/* binding */ openItem),\n/* harmony export */   \"default\": () => (/* binding */ KernelCard)\n/* harmony export */ });\n/* harmony import */ var _card_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./card.scss */ \"./src/renderer/components/card.scss\");\n/* harmony import */ var _discord__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./discord */ \"./src/renderer/components/discord.ts\");\n\n\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nconst kernel = window.kernel;\nconst Electron = SettingsNative.requireModule(\"electron\");\nfunction Icon({ name , ...props }) {\n    const IconComponent = _discord__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Icons[name] ?? (()=>null\n    );\n    props.size ??= \"16\";\n    return(/*#__PURE__*/ React.createElement(IconComponent, _extends({}, props, {\n        width: props.size,\n        height: props.size\n    })));\n}\nfunction ToolButton({ label , icon , onClick , danger =false  }) {\n    const { Tooltips , Button  } = _discord__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    return(/*#__PURE__*/ React.createElement(Tooltips.Tooltip, {\n        text: label,\n        position: \"top\"\n    }, (props)=>/*#__PURE__*/ React.createElement(Button, _extends({}, props, {\n            className: \"kernel-toolbutton\",\n            look: Button.Looks.BLANK,\n            size: Button.Sizes.NONE,\n            onClick: onClick\n        }), /*#__PURE__*/ React.createElement(Icon, {\n            size: \"20\",\n            name: icon,\n            color: danger ? \"#ed4245\" : undefined\n        }))\n    ));\n}\nfunction SwitchWrapper({ value: value1 , onChange , disabled  }) {\n    const { Switch  } = _discord__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    const [isChecked, setChecked] = React.useState(value1);\n    return(/*#__PURE__*/ React.createElement(Switch, {\n        checked: isChecked,\n        disabled: disabled,\n        onChange: React.useCallback(()=>{\n            if (disabled) return;\n            onChange(!isChecked);\n            setChecked((value)=>!value\n            );\n        }, [\n            onChange,\n            isChecked\n        ])\n    }));\n}\nfunction openItem(path) {\n    if (path.endsWith(\".asar\")) return Electron.showItemInFolder(path);\n    Electron.openPath(path);\n}\nfunction KernelCard({ pkg  }) {\n    const { Markdown , Text  } = _discord__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    return(/*#__PURE__*/ React.createElement(\"div\", {\n        className: \"kernel-card\"\n    }, /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"kernel-card-tools\"\n    }, /*#__PURE__*/ React.createElement(ToolButton, {\n        label: \"Open Path\",\n        icon: \"Folder\",\n        onClick: ()=>openItem(pkg.path)\n    }), /*#__PURE__*/ React.createElement(ToolButton, {\n        danger: true,\n        label: \"Delete\",\n        icon: \"Trash\",\n        onClick: ()=>Electron.trashItem(pkg.path)\n    })), /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"kernel-card-header\"\n    }, /*#__PURE__*/ React.createElement(Text, {\n        className: \"kernel-card-name\"\n    }, pkg.name)), pkg.description != null && /*#__PURE__*/ React.createElement(Text, {\n        className: \"kernel-card-desc\"\n    }, /*#__PURE__*/ React.createElement(Markdown, null, pkg.description)), /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"kernel-footer\"\n    }, /*#__PURE__*/ React.createElement(SwitchWrapper, {\n        value: pkg.enabled,\n        disabled: pkg.id === \"kernel-settings\",\n        onChange: (value)=>{\n            if (!value) kernel.packages.stopPackage(pkg.id);\n            else kernel.packages.startPackage(pkg.id);\n        }\n    }))));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/components/card.tsx\n");

/***/ }),

/***/ "./src/renderer/components/discord.ts":
/*!********************************************!*\
  !*** ./src/renderer/components/discord.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _modules_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/memoize */ \"./src/renderer/modules/memoize.ts\");\n/* harmony import */ var _modules_webpack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/webpack */ \"./src/renderer/modules/webpack.ts\");\n\n\nconst DiscordComponents = (0,_modules_memoize__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    get Button () {\n        return _modules_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByProps(\"BorderColors\");\n    },\n    get Switch () {\n        return _modules_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByDisplayName(\"Switch\");\n    },\n    get Markdown () {\n        return _modules_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findModule((m)=>m.displayName === \"Markdown\" && \"rules\" in m\n        );\n    },\n    get Header () {\n        return _modules_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findModule((m)=>m.displayName === \"Header\" && \"Tags\" in m\n        );\n    },\n    get Text () {\n        return _modules_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByDisplayName(\"Text\");\n    },\n    get Forms () {\n        return _modules_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByProps(\"FormItem\", \"FormTitle\");\n    },\n    get Spinner () {\n        return _modules_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByDisplayName(\"Spinner\");\n    },\n    get Flex () {\n        return _modules_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByDisplayName(\"Flex\");\n    },\n    get Link () {\n        return _modules_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByDisplayName(\"Anchor\");\n    },\n    get Icons () {\n        const icons = _modules_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findModules((m)=>typeof m === \"function\" && m.displayName && m.toString().indexOf(\"currentColor\") > -1\n        );\n        return Object.fromEntries(icons.map((icon)=>[\n                icon.displayName,\n                icon\n            ]\n        ));\n    },\n    get Tooltips () {\n        const TooltipModule = _modules_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByProps(\"TooltipContainer\");\n        return {\n            Container: TooltipModule.TooltipContainer,\n            Tooltip: TooltipModule.default,\n            ...TooltipModule\n        };\n    }\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DiscordComponents);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9kaXNjb3JkLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3QztBQUNBO0FBRXhDLEtBQUssQ0FBQ0UsaUJBQWlCLEdBQUdGLDREQUFPLENBQUMsQ0FBQztRQUMzQkcsTUFBTSxJQUFHLENBQUM7UUFBQSxNQUFNLENBQUNGLG9FQUFtQixDQUFDLENBQWM7SUFBRSxDQUFDO1FBQ3RESSxNQUFNLElBQUcsQ0FBQztRQUFBLE1BQU0sQ0FBQ0osMEVBQXlCLENBQUMsQ0FBUTtJQUFFLENBQUM7UUFDdERNLFFBQVEsSUFBRyxDQUFDO1FBQUEsTUFBTSxDQUFDTixtRUFBa0IsRUFBQ1EsQ0FBQyxHQUFJQSxDQUFDLENBQUNDLFdBQVcsS0FBSyxDQUFVLGFBQUksQ0FBTyxVQUFJRCxDQUFDOztJQUFFLENBQUM7UUFDMUZFLE1BQU0sSUFBRyxDQUFDO1FBQUEsTUFBTSxDQUFDVixtRUFBa0IsRUFBQ1EsQ0FBQyxHQUFJQSxDQUFDLENBQUNDLFdBQVcsS0FBSyxDQUFRLFdBQUksQ0FBTSxTQUFJRCxDQUFDOztJQUFFLENBQUM7UUFDckZHLElBQUksSUFBRyxDQUFDO1FBQUEsTUFBTSxDQUFDWCwwRUFBeUIsQ0FBQyxDQUFNO0lBQUUsQ0FBQztRQUNsRFksS0FBSyxJQUFHLENBQUM7UUFBQSxNQUFNLENBQUNaLG9FQUFtQixDQUFDLENBQVUsV0FBRSxDQUFXO0lBQUUsQ0FBQztRQUM5RGEsT0FBTyxJQUFHLENBQUM7UUFBQSxNQUFNLENBQUNiLDBFQUF5QixDQUFDLENBQVM7SUFBRSxDQUFDO1FBQ3hEYyxJQUFJLElBQUcsQ0FBQztRQUFBLE1BQU0sQ0FBQ2QsMEVBQXlCLENBQUMsQ0FBTTtJQUFFLENBQUM7UUFDbERlLElBQUksSUFBRyxDQUFDO1FBQUEsTUFBTSxDQUFDZiwwRUFBeUIsQ0FBQyxDQUFRO0lBQUUsQ0FBQztRQUNwRGdCLEtBQUssSUFBRyxDQUFDO1FBQ1QsS0FBSyxDQUFDQyxLQUFLLEdBQUdqQixvRUFBbUIsRUFBQ1EsQ0FBQyxHQUFJLE1BQU0sQ0FBQ0EsQ0FBQyxLQUFLLENBQVUsYUFBSUEsQ0FBQyxDQUFDQyxXQUFXLElBQUlELENBQUMsQ0FBQ1csUUFBUSxHQUFHQyxPQUFPLENBQUMsQ0FBYyxrQkFBSyxDQUFDOztRQUU1SCxNQUFNLENBQUNDLE1BQU0sQ0FBQ0MsV0FBVyxDQUFDTCxLQUFLLENBQUNNLEdBQUcsRUFBQ0MsSUFBSSxHQUFJLENBQUNBO2dCQUFBQSxJQUFJLENBQUNmLFdBQVc7Z0JBQUVlLElBQUk7WUFBQSxDQUFDOztJQUN4RSxDQUFDO1FBQ0dDLFFBQVEsSUFBRyxDQUFDO1FBQ1osS0FBSyxDQUFDQyxhQUFhLEdBQUcxQixvRUFBbUIsQ0FBQyxDQUFrQjtRQUU1RCxNQUFNLENBQUMsQ0FBQztZQUNKMkIsU0FBUyxFQUFFRCxhQUFhLENBQUNFLGdCQUFnQjtZQUN6Q0MsT0FBTyxFQUFFSCxhQUFhLENBQUNJLE9BQU87ZUFDM0JKLGFBQWE7UUFDcEIsQ0FBQztJQUNMLENBQUM7QUFDTCxDQUFDO0FBRUQsaUVBQWV6QixpQkFBaUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2tlcm5lbC1zZXR0aW5ncy8uL3NyYy9yZW5kZXJlci9jb21wb25lbnRzL2Rpc2NvcmQudHM/ZTRhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWVtb2l6ZSBmcm9tIFwiLi4vbW9kdWxlcy9tZW1vaXplXCI7XHJcbmltcG9ydCBXZWJwYWNrIGZyb20gXCIuLi9tb2R1bGVzL3dlYnBhY2tcIjtcclxuXHJcbmNvbnN0IERpc2NvcmRDb21wb25lbnRzID0gbWVtb2l6ZSh7XHJcbiAgICBnZXQgQnV0dG9uKCkge3JldHVybiBXZWJwYWNrLmZpbmRCeVByb3BzKFwiQm9yZGVyQ29sb3JzXCIpO30sXHJcbiAgICBnZXQgU3dpdGNoKCkge3JldHVybiBXZWJwYWNrLmZpbmRCeURpc3BsYXlOYW1lKFwiU3dpdGNoXCIpO30sXHJcbiAgICBnZXQgTWFya2Rvd24oKSB7cmV0dXJuIFdlYnBhY2suZmluZE1vZHVsZShtID0+IG0uZGlzcGxheU5hbWUgPT09IFwiTWFya2Rvd25cIiAmJiBcInJ1bGVzXCIgaW4gbSk7fSxcclxuICAgIGdldCBIZWFkZXIoKSB7cmV0dXJuIFdlYnBhY2suZmluZE1vZHVsZShtID0+IG0uZGlzcGxheU5hbWUgPT09IFwiSGVhZGVyXCIgJiYgXCJUYWdzXCIgaW4gbSk7fSxcclxuICAgIGdldCBUZXh0KCkge3JldHVybiBXZWJwYWNrLmZpbmRCeURpc3BsYXlOYW1lKFwiVGV4dFwiKTt9LFxyXG4gICAgZ2V0IEZvcm1zKCkge3JldHVybiBXZWJwYWNrLmZpbmRCeVByb3BzKFwiRm9ybUl0ZW1cIiwgXCJGb3JtVGl0bGVcIik7fSxcclxuICAgIGdldCBTcGlubmVyKCkge3JldHVybiBXZWJwYWNrLmZpbmRCeURpc3BsYXlOYW1lKFwiU3Bpbm5lclwiKTt9LFxyXG4gICAgZ2V0IEZsZXgoKSB7cmV0dXJuIFdlYnBhY2suZmluZEJ5RGlzcGxheU5hbWUoXCJGbGV4XCIpO30sXHJcbiAgICBnZXQgTGluaygpIHtyZXR1cm4gV2VicGFjay5maW5kQnlEaXNwbGF5TmFtZShcIkFuY2hvclwiKTt9LFxyXG4gICAgZ2V0IEljb25zKCkge1xyXG4gICAgICAgIGNvbnN0IGljb25zID0gV2VicGFjay5maW5kTW9kdWxlcyhtID0+IHR5cGVvZiBtID09PSBcImZ1bmN0aW9uXCIgJiYgbS5kaXNwbGF5TmFtZSAmJiBtLnRvU3RyaW5nKCkuaW5kZXhPZihcImN1cnJlbnRDb2xvclwiKSA+IC0xKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhpY29ucy5tYXAoaWNvbiA9PiBbaWNvbi5kaXNwbGF5TmFtZSwgaWNvbl0pKTtcclxuICAgIH0sXHJcbiAgICBnZXQgVG9vbHRpcHMoKSB7XHJcbiAgICAgICAgY29uc3QgVG9vbHRpcE1vZHVsZSA9IFdlYnBhY2suZmluZEJ5UHJvcHMoXCJUb29sdGlwQ29udGFpbmVyXCIpO1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBDb250YWluZXI6IFRvb2x0aXBNb2R1bGUuVG9vbHRpcENvbnRhaW5lcixcclxuICAgICAgICAgICAgVG9vbHRpcDogVG9vbHRpcE1vZHVsZS5kZWZhdWx0LFxyXG4gICAgICAgICAgICAuLi5Ub29sdGlwTW9kdWxlXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBEaXNjb3JkQ29tcG9uZW50czsiXSwibmFtZXMiOlsibWVtb2l6ZSIsIldlYnBhY2siLCJEaXNjb3JkQ29tcG9uZW50cyIsIkJ1dHRvbiIsImZpbmRCeVByb3BzIiwiU3dpdGNoIiwiZmluZEJ5RGlzcGxheU5hbWUiLCJNYXJrZG93biIsImZpbmRNb2R1bGUiLCJtIiwiZGlzcGxheU5hbWUiLCJIZWFkZXIiLCJUZXh0IiwiRm9ybXMiLCJTcGlubmVyIiwiRmxleCIsIkxpbmsiLCJJY29ucyIsImljb25zIiwiZmluZE1vZHVsZXMiLCJ0b1N0cmluZyIsImluZGV4T2YiLCJPYmplY3QiLCJmcm9tRW50cmllcyIsIm1hcCIsImljb24iLCJUb29sdGlwcyIsIlRvb2x0aXBNb2R1bGUiLCJDb250YWluZXIiLCJUb29sdGlwQ29udGFpbmVyIiwiVG9vbHRpcCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/components/discord.ts\n");

/***/ }),

/***/ "./src/renderer/components/icons/shield.tsx":
/*!**************************************************!*\
  !*** ./src/renderer/components/icons/shield.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nconst Verified = (props)=>/*#__PURE__*/ React.createElement(\"svg\", _extends({\n        xmlns: \"http://www.w3.org/2000/svg\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        width: \"24\"\n    }, props), /*#__PURE__*/ React.createElement(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"none\"\n    }), /*#__PURE__*/ React.createElement(\"path\", {\n        d: \"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\",\n        fill: \"currentColor\"\n    }))\n;\nconst Warning = (props)=>/*#__PURE__*/ React.createElement(\"svg\", _extends({\n        xmlns: \"http://www.w3.org/2000/svg\",\n        \"enable-background\": \"new 0 0 24 24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        width: \"24\"\n    }, props), /*#__PURE__*/ React.createElement(\"g\", null, /*#__PURE__*/ React.createElement(\"path\", {\n        d: \"M0,0h24v24H0V0z\",\n        fill: \"none\"\n    })), /*#__PURE__*/ React.createElement(\"g\", null, /*#__PURE__*/ React.createElement(\"path\", {\n        d: \"M12,2L4,5v6.09c0,5.05,3.41,9.76,8,10.91c4.59-1.15,8-5.86,8-10.91V5L12,2z M13,16h-2v-2h2V16z M13,12h-2V7h2V12z\",\n        fill: \"currentColor\"\n    })))\n;\nvar Types;\n(function(Types) {\n    Types[\"VERIFIED\"] = \"VERIFIED\";\n    Types[\"WARNING\"] = \"WARNING\";\n})(Types || (Types = {}));\nconst Shield = ({ type , ...props })=>{\n    switch(type){\n        case Types.VERIFIED:\n            return(/*#__PURE__*/ React.createElement(Verified, _extends({}, props)));\n        case Types.WARNING:\n            return(/*#__PURE__*/ React.createElement(Warning, _extends({}, props)));\n        default:\n            return null;\n    }\n};\nShield.Types = Types;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Shield);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9pY29ucy9zaGllbGQudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLEtBQUssQ0FBQ0EsUUFBUSxJQUFJQyxLQUFVLHFDQUN2QkMsQ0FBRztRQUFDQyxLQUFLLEVBQUMsQ0FBNEI7UUFBQ0MsTUFBTSxFQUFDLENBQUk7UUFBQ0MsT0FBTyxFQUFDLENBQVc7UUFBQ0MsS0FBSyxFQUFDLENBQUk7T0FBS0wsS0FBSyxxQ0FDdkZNLENBQUk7UUFBQ0MsQ0FBQyxFQUFDLENBQWU7UUFBQ0MsSUFBSSxFQUFDLENBQU07MENBQ2xDRixDQUFJO1FBQUNDLENBQUMsRUFBQyxDQUFxSDtRQUFDQyxJQUFJLEVBQUMsQ0FBYzs7O0FBSXpKLEtBQUssQ0FBQ0MsT0FBTyxJQUFJVCxLQUFLLHFDQUNqQkMsQ0FBRztRQUFDQyxLQUFLLEVBQUMsQ0FBNEI7UUFBQ1EsQ0FBaUIsb0JBQUMsQ0FBZTtRQUFDUCxNQUFNLEVBQUMsQ0FBSTtRQUFDQyxPQUFPLEVBQUMsQ0FBVztRQUFDQyxLQUFLLEVBQUMsQ0FBSTtPQUFLTCxLQUFLLHFDQUN6SFcsQ0FBQyw0Q0FDR0wsQ0FBSTtRQUFDQyxDQUFDLEVBQUMsQ0FBaUI7UUFBQ0MsSUFBSSxFQUFDLENBQU07MkNBRXhDRyxDQUFDLDRDQUNHTCxDQUFJO1FBQUNDLENBQUMsRUFBQyxDQUErRztRQUFDQyxJQUFJLEVBQUMsQ0FBYzs7OztVQUtsSkksS0FBSztJQUFMQSxLQUFLLENBQ05DLENBQVEsYUFBUkEsQ0FBUTtJQURQRCxLQUFLLENBRU5FLENBQU8sWUFBUEEsQ0FBTztHQUZORixLQUFLLEtBQUxBLEtBQUs7QUFPVixLQUFLLENBQUNHLE1BQU0sSUFBdUYsQ0FBQ0MsQ0FBQUEsSUFBSSxNQUFLaEIsS0FBSyxFQUFDLEdBQUssQ0FBQztJQUNySCxNQUFNLENBQUVnQixJQUFJO1FBQ1IsSUFBSSxDQUFDSixLQUFLLENBQUNDLFFBQVE7WUFBRSxNQUFNLG1DQUFFZCxRQUFRLGVBQUtDLEtBQUs7UUFDL0MsSUFBSSxDQUFDWSxLQUFLLENBQUNFLE9BQU87WUFBRSxNQUFNLG1DQUFFTCxPQUFPLGVBQUtULEtBQUs7O1lBRXBDLE1BQU0sQ0FBQyxJQUFJOztBQUU1QixDQUFDO0FBRURlLE1BQU0sQ0FBQ0gsS0FBSyxHQUFHQSxLQUFLO0FBRXBCLGlFQUFlRyxNQUFNLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rZXJuZWwtc2V0dGluZ3MvLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9pY29ucy9zaGllbGQudHN4P2MxZTMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVmVyaWZpZWQgPSAocHJvcHM6IGFueSkgPT4gKFxyXG4gICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgd2lkdGg9XCIyNFwiIHsuLi5wcm9wc30+XHJcbiAgICAgICAgPHBhdGggZD1cIk0wIDBoMjR2MjRIMHpcIiBmaWxsPVwibm9uZVwiIC8+XHJcbiAgICAgICAgPHBhdGggZD1cIk0xMiAxTDMgNXY2YzAgNS41NSAzLjg0IDEwLjc0IDkgMTIgNS4xNi0xLjI2IDktNi40NSA5LTEyVjVsLTktNHptLTIgMTZsLTQtNCAxLjQxLTEuNDFMMTAgMTQuMTdsNi41OS02LjU5TDE4IDlsLTggOHpcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgLz5cclxuICAgIDwvc3ZnPlxyXG4pO1xyXG5cclxuY29uc3QgV2FybmluZyA9IChwcm9wcykgPT4gKFxyXG4gICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZW5hYmxlLWJhY2tncm91bmQ9XCJuZXcgMCAwIDI0IDI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgd2lkdGg9XCIyNFwiIHsuLi5wcm9wc30+XHJcbiAgICAgICAgPGc+XHJcbiAgICAgICAgICAgIDxwYXRoIGQ9XCJNMCwwaDI0djI0SDBWMHpcIiBmaWxsPVwibm9uZVwiIC8+XHJcbiAgICAgICAgPC9nPlxyXG4gICAgICAgIDxnPlxyXG4gICAgICAgICAgICA8cGF0aCBkPVwiTTEyLDJMNCw1djYuMDljMCw1LjA1LDMuNDEsOS43Niw4LDEwLjkxYzQuNTktMS4xNSw4LTUuODYsOC0xMC45MVY1TDEyLDJ6IE0xMywxNmgtMnYtMmgyVjE2eiBNMTMsMTJoLTJWN2gyVjEyelwiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiAvPlxyXG4gICAgICAgIDwvZz5cclxuICAgIDwvc3ZnPlxyXG4pO1xyXG5cclxuZW51bSBUeXBlcyB7XHJcbiAgICBWRVJJRklFRCA9IFwiVkVSSUZJRURcIixcclxuICAgIFdBUk5JTkcgPSBcIldBUk5JTkdcIlxyXG59O1xyXG5cclxudHlwZSBGQzxTLCBQID0ge30+ID0gUmVhY3QuRkM8UD4gJiBTO1xyXG5cclxuY29uc3QgU2hpZWxkOiBGQzx7VHlwZXM/OiB0eXBlb2YgVHlwZXN9LCB7dHlwZToga2V5b2YgdHlwZW9mIFR5cGVzfSAmIFJlYWN0LlNWR0F0dHJpYnV0ZXM8YW55Pj4gPSAoe3R5cGUsIC4uLnByb3BzfSkgPT4ge1xyXG4gICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgICAgY2FzZSBUeXBlcy5WRVJJRklFRDogcmV0dXJuIDxWZXJpZmllZCB7Li4ucHJvcHN9IC8+O1xyXG4gICAgICAgIGNhc2UgVHlwZXMuV0FSTklORzogcmV0dXJuIDxXYXJuaW5nIHsuLi5wcm9wc30gLz47XHJcblxyXG4gICAgICAgIGRlZmF1bHQ6IHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59O1xyXG5cclxuU2hpZWxkLlR5cGVzID0gVHlwZXM7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTaGllbGQ7Il0sIm5hbWVzIjpbIlZlcmlmaWVkIiwicHJvcHMiLCJzdmciLCJ4bWxucyIsImhlaWdodCIsInZpZXdCb3giLCJ3aWR0aCIsInBhdGgiLCJkIiwiZmlsbCIsIldhcm5pbmciLCJlbmFibGUtYmFja2dyb3VuZCIsImciLCJUeXBlcyIsIlZFUklGSUVEIiwiV0FSTklORyIsIlNoaWVsZCIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/components/icons/shield.tsx\n");

/***/ }),

/***/ "./src/renderer/components/icons/update_available.tsx":
/*!************************************************************!*\
  !*** ./src/renderer/components/icons/update_available.tsx ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UpdateAvailable)\n/* harmony export */ });\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction UpdateAvailable(props) {\n    return(/*#__PURE__*/ React.createElement(\"svg\", _extends({\n        className: \"ks-update-available\",\n        \"aria-hidden\": \"false\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 24 24\"\n    }, props), /*#__PURE__*/ React.createElement(\"g\", {\n        fill: \"none\",\n        \"fill-rule\": \"evenodd\"\n    }, /*#__PURE__*/ React.createElement(\"path\", {\n        fill: \"currentColor\",\n        \"fill-rule\": \"nonzero\",\n        d: \"M5,8 L9,12 L6,12 C6,15.31 8.69,18 12,18 C13.01,18 13.97,17.75 14.8,17.3 L16.26,18.76 C15.03,19.54 13.57,20 12,20 C7.58,20 4,16.42 4,12 L1,12 L5,8 Z M18,12 C18,8.69 15.31,6 12,6 C10.99,6 10.03,6.25 9.2,6.7 L7.74,5.24 C8.97,4.46 10.43,4 12,4 C16.42,4 20,7.58 20,12 L23,12 L19,16 L15,12 L18,12 Z\"\n    }), /*#__PURE__*/ React.createElement(\"polygon\", {\n        points: \"24 0 0 0 0 24 24 24\"\n    }))));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9pY29ucy91cGRhdGVfYXZhaWxhYmxlLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZSxRQUFRLENBQUNBLGVBQWUsQ0FBQ0MsS0FBVSxFQUFFLENBQUM7SUFDakQsTUFBTSxtQ0FDREMsQ0FBRztRQUFDQyxTQUFTLEVBQUMsQ0FBcUI7UUFBQ0MsQ0FBVyxjQUFDLENBQU87UUFBQ0MsS0FBSyxFQUFDLENBQUk7UUFBQ0MsTUFBTSxFQUFDLENBQUk7UUFBQ0MsT0FBTyxFQUFDLENBQVc7T0FBS04sS0FBSyxxQ0FDeEdPLENBQUM7UUFBQ0MsSUFBSSxFQUFDLENBQU07UUFBQ0MsQ0FBUyxZQUFDLENBQVM7eUNBQzdCQyxDQUFJO1FBQUNGLElBQUksRUFBQyxDQUFjO1FBQUNDLENBQVMsWUFBQyxDQUFTO1FBQUNFLENBQUMsRUFBQyxDQUFzUzswQ0FDclZDLENBQU87UUFBQ0MsTUFBTSxFQUFDLENBQXFCOztBQUlyRCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2VybmVsLXNldHRpbmdzLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvaWNvbnMvdXBkYXRlX2F2YWlsYWJsZS50c3g/MmM1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBVcGRhdGVBdmFpbGFibGUocHJvcHM6IGFueSkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT1cImtzLXVwZGF0ZS1hdmFpbGFibGVcIiBhcmlhLWhpZGRlbj1cImZhbHNlXCIgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIHsuLi5wcm9wc30+XHJcbiAgICAgICAgICAgIDxnIGZpbGw9XCJub25lXCIgZmlsbC1ydWxlPVwiZXZlbm9kZFwiPlxyXG4gICAgICAgICAgICAgICAgPHBhdGggZmlsbD1cImN1cnJlbnRDb2xvclwiIGZpbGwtcnVsZT1cIm5vbnplcm9cIiBkPVwiTTUsOCBMOSwxMiBMNiwxMiBDNiwxNS4zMSA4LjY5LDE4IDEyLDE4IEMxMy4wMSwxOCAxMy45NywxNy43NSAxNC44LDE3LjMgTDE2LjI2LDE4Ljc2IEMxNS4wMywxOS41NCAxMy41NywyMCAxMiwyMCBDNy41OCwyMCA0LDE2LjQyIDQsMTIgTDEsMTIgTDUsOCBaIE0xOCwxMiBDMTgsOC42OSAxNS4zMSw2IDEyLDYgQzEwLjk5LDYgMTAuMDMsNi4yNSA5LjIsNi43IEw3Ljc0LDUuMjQgQzguOTcsNC40NiAxMC40Myw0IDEyLDQgQzE2LjQyLDQgMjAsNy41OCAyMCwxMiBMMjMsMTIgTDE5LDE2IEwxNSwxMiBMMTgsMTIgWlwiIC8+XHJcbiAgICAgICAgICAgICAgICA8cG9seWdvbiBwb2ludHM9XCIyNCAwIDAgMCAwIDI0IDI0IDI0XCIgLz5cclxuICAgICAgICAgICAgPC9nPlxyXG4gICAgICAgIDwvc3ZnPlxyXG4gICAgKTtcclxufSJdLCJuYW1lcyI6WyJVcGRhdGVBdmFpbGFibGUiLCJwcm9wcyIsInN2ZyIsImNsYXNzTmFtZSIsImFyaWEtaGlkZGVuIiwid2lkdGgiLCJoZWlnaHQiLCJ2aWV3Qm94IiwiZyIsImZpbGwiLCJmaWxsLXJ1bGUiLCJwYXRoIiwiZCIsInBvbHlnb24iLCJwb2ludHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/components/icons/update_available.tsx\n");

/***/ }),

/***/ "./src/renderer/components/panel.tsx":
/*!*******************************************!*\
  !*** ./src/renderer/components/panel.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ KernelPanel)\n/* harmony export */ });\n/* harmony import */ var _card__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./card */ \"./src/renderer/components/card.tsx\");\n/* harmony import */ var _discord__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./discord */ \"./src/renderer/components/discord.ts\");\n/* harmony import */ var _panel_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./panel.scss */ \"./src/renderer/components/panel.scss\");\n\n\n\nconst kernel = window.kernel;\nfunction KernelPanel() {\n    const { Forms: { FormTitle  }  } = _discord__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    return(/*#__PURE__*/ React.createElement(\"div\", {\n        className: \"kernel-panel\"\n    }, /*#__PURE__*/ React.createElement(FormTitle, {\n        tag: FormTitle.Tags.H1\n    }, \"Packages\"), /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"kernel-card-scroller\"\n    }, Object.values(kernel.packages.getPackages()).map((pkg)=>/*#__PURE__*/ React.createElement(_card__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n            pkg: pkg,\n            key: pkg.id ?? pkg.name\n        })\n    ))));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9wYW5lbC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQjtBQUNVO0FBQ3BCO0FBRXJCLEtBQUssQ0FBQ0UsTUFBTSxHQUFTQyxNQUFNLENBQVNELE1BQU07QUFFM0IsUUFBUSxDQUFDRSxXQUFXLEdBQUcsQ0FBQztJQUNuQyxLQUFLLENBQUMsQ0FBQ0MsQ0FBQUEsS0FBSyxFQUFFLENBQUNDLENBQUFBLFNBQVMsR0FBQyxHQUFDLEdBQUdMLGdEQUFpQjtJQUU5QyxNQUFNLG1DQUNETSxDQUFHO1FBQUNDLFNBQVMsRUFBQyxDQUFjO3lDQUN4QkYsU0FBUztRQUFDRyxHQUFHLEVBQUVILFNBQVMsQ0FBQ0ksSUFBSSxDQUFDQyxFQUFFO09BQUUsQ0FBUSw4Q0FDMUNKLENBQUc7UUFBQ0MsU0FBUyxFQUFDLENBQXNCO09BQ2hDSSxNQUFNLENBQUNDLE1BQU0sQ0FBTVgsTUFBTSxDQUFDWSxRQUFRLENBQUNDLFdBQVcsSUFBSUMsR0FBRyxFQUFDQyxHQUFHLHFDQUNyRGpCLDZDQUFVO1lBQUNpQixHQUFHLEVBQUVBLEdBQUc7WUFBRUMsR0FBRyxFQUFFRCxHQUFHLENBQUNFLEVBQUUsSUFBSUYsR0FBRyxDQUFDRyxJQUFJOzs7QUFLakUsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2tlcm5lbC1zZXR0aW5ncy8uL3NyYy9yZW5kZXJlci9jb21wb25lbnRzL3BhbmVsLnRzeD9iZmRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBLZXJuZWxDYXJkIGZyb20gXCIuL2NhcmRcIjtcclxuaW1wb3J0IERpc2NvcmRDb21wb25lbnRzIGZyb20gXCIuL2Rpc2NvcmRcIjtcclxuaW1wb3J0IFwiLi9wYW5lbC5zY3NzXCI7XHJcblxyXG5jb25zdCBrZXJuZWw6IGFueSA9ICh3aW5kb3cgYXMgYW55KS5rZXJuZWw7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBLZXJuZWxQYW5lbCgpIHtcclxuICAgIGNvbnN0IHtGb3Jtczoge0Zvcm1UaXRsZX19ID0gRGlzY29yZENvbXBvbmVudHM7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImtlcm5lbC1wYW5lbFwiPlxyXG4gICAgICAgICAgICA8Rm9ybVRpdGxlIHRhZz17Rm9ybVRpdGxlLlRhZ3MuSDF9PlBhY2thZ2VzPC9Gb3JtVGl0bGU+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwia2VybmVsLWNhcmQtc2Nyb2xsZXJcIj5cclxuICAgICAgICAgICAgICAgIHtPYmplY3QudmFsdWVzPGFueT4oa2VybmVsLnBhY2thZ2VzLmdldFBhY2thZ2VzKCkpLm1hcChwa2cgPT4gKFxyXG4gICAgICAgICAgICAgICAgICAgIDxLZXJuZWxDYXJkIHBrZz17cGtnfSBrZXk9e3BrZy5pZCA/PyBwa2cubmFtZX0gLz5cclxuICAgICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICk7XHJcbn0iXSwibmFtZXMiOlsiS2VybmVsQ2FyZCIsIkRpc2NvcmRDb21wb25lbnRzIiwia2VybmVsIiwid2luZG93IiwiS2VybmVsUGFuZWwiLCJGb3JtcyIsIkZvcm1UaXRsZSIsImRpdiIsImNsYXNzTmFtZSIsInRhZyIsIlRhZ3MiLCJIMSIsIk9iamVjdCIsInZhbHVlcyIsInBhY2thZ2VzIiwiZ2V0UGFja2FnZXMiLCJtYXAiLCJwa2ciLCJrZXkiLCJpZCIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/components/panel.tsx\n");

/***/ }),

/***/ "./src/renderer/components/primitives.tsx":
/*!************************************************!*\
  !*** ./src/renderer/components/primitives.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Show\": () => (/* binding */ Show),\n/* harmony export */   \"Switch\": () => (/* binding */ Switch),\n/* harmony export */   \"Match\": () => (/* binding */ Match),\n/* harmony export */   \"For\": () => (/* binding */ For)\n/* harmony export */ });\nfunction Show({ when , children , fallback =null  }) {\n    return when ? children : fallback;\n}\nfunction Switch({ children , default: def = null  }) {\n    return children.find((child)=>child?.props?.when\n    ) ?? def;\n}\nfunction Match({ when , children  }) {\n    return children;\n}\nfunction For({ each , children  }) {\n    const result = [];\n    for(let i = 0; i < each.length; i++){\n        result.push(children(each[i], i));\n    }\n    return(/*#__PURE__*/ React.createElement(React.Fragment, null, result));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9wcmltaXRpdmVzLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU8sU0FBU0EsSUFBSSxDQUFDLENBQUNDLENBQUFBLElBQUksR0FBRUMsUUFBUSxHQUFFQyxRQUFRLEVBQUcsSUFBSSxFQUFnRCxDQUFDLEVBQUUsQ0FBQztJQUNyRyxNQUFNLENBQUNGLElBQUksR0FBR0MsUUFBUSxHQUFHQyxRQUFRO0FBQ3JDLENBQUM7QUFFTSxTQUFTQyxNQUFNLENBQUMsQ0FBQ0YsQ0FBQUEsUUFBUSxHQUFFRyxPQUFPLEVBQUVDLEdBQUcsR0FBRyxJQUFJLEdBQUMsRUFBRSxDQUFDO0lBQ3JELE1BQU0sQ0FBQ0osUUFBUSxDQUFDSyxJQUFJLEVBQUVDLEtBQVUsR0FBS0EsS0FBSyxFQUFFQyxLQUFLLEVBQUVSLElBQUk7U0FBS0ssR0FBRztBQUNuRSxDQUFDO0FBRU0sU0FBU0ksS0FBSyxDQUFDLENBQUNULENBQUFBLElBQUksR0FBRUMsUUFBUSxFQUFnQyxDQUFDLEVBQUUsQ0FBQztJQUNyRSxNQUFNLENBQUNBLFFBQVE7QUFDbkIsQ0FBQztBQUVNLFNBQVNTLEdBQUcsQ0FBSSxDQUFDQyxDQUFBQSxJQUFJLEdBQUVWLFFBQVEsRUFBd0QsQ0FBQyxFQUFFLENBQUM7SUFDOUYsS0FBSyxDQUFDVyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBRWpCLEdBQUcsQ0FBRSxHQUFHLENBQUNDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0YsSUFBSSxDQUFDRyxNQUFNLEVBQUVELENBQUMsR0FBSSxDQUFDO1FBQ25DRCxNQUFNLENBQUNHLElBQUksQ0FBQ2QsUUFBUSxDQUFDVSxJQUFJLENBQUNFLENBQUMsR0FBR0EsQ0FBQztJQUNuQyxDQUFDO0lBRUQsTUFBTSx5REFBSUQsTUFBTTtBQUNwQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2VybmVsLXNldHRpbmdzLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvcHJpbWl0aXZlcy50c3g/MDU4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gU2hvdyh7d2hlbiwgY2hpbGRyZW4sIGZhbGxiYWNrID0gbnVsbH06IHt3aGVuOiBib29sZWFuLCBjaGlsZHJlbjogYW55LCBmYWxsYmFjaz86IGFueX0pIHtcclxuICAgIHJldHVybiB3aGVuID8gY2hpbGRyZW4gOiBmYWxsYmFjaztcclxufTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBTd2l0Y2goe2NoaWxkcmVuLCBkZWZhdWx0OiBkZWYgPSBudWxsfSkge1xyXG4gICAgcmV0dXJuIGNoaWxkcmVuLmZpbmQoKGNoaWxkOiBhbnkpID0+IGNoaWxkPy5wcm9wcz8ud2hlbikgPz8gZGVmO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIE1hdGNoKHt3aGVuLCBjaGlsZHJlbn06IHt3aGVuOiBib29sZWFuLCBjaGlsZHJlbjogYW55fSkge1xyXG4gICAgcmV0dXJuIGNoaWxkcmVuO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIEZvcjxUPih7ZWFjaCwgY2hpbGRyZW59OiB7ZWFjaDogVFtdLCBjaGlsZHJlbjogKGl0ZW06IFQsIGluZGV4OiBudW1iZXIpID0+IGFueX0pIHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZWFjaC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHJlc3VsdC5wdXNoKGNoaWxkcmVuKGVhY2hbaV0sIGkpKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gPD57cmVzdWx0fTwvPjtcclxufTsiXSwibmFtZXMiOlsiU2hvdyIsIndoZW4iLCJjaGlsZHJlbiIsImZhbGxiYWNrIiwiU3dpdGNoIiwiZGVmYXVsdCIsImRlZiIsImZpbmQiLCJjaGlsZCIsInByb3BzIiwiTWF0Y2giLCJGb3IiLCJlYWNoIiwicmVzdWx0IiwiaSIsImxlbmd0aCIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/components/primitives.tsx\n");

/***/ }),

/***/ "./src/renderer/components/updates.tsx":
/*!*********************************************!*\
  !*** ./src/renderer/components/updates.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LoadingSpinner\": () => (/* binding */ LoadingSpinner),\n/* harmony export */   \"CurrentBranch\": () => (/* binding */ CurrentBranch),\n/* harmony export */   \"CurrentCommitHash\": () => (/* binding */ CurrentCommitHash),\n/* harmony export */   \"default\": () => (/* binding */ UpdaterPanel)\n/* harmony export */ });\n/* harmony import */ var _modules_discord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @modules/discord */ \"./src/renderer/modules/discord.ts\");\n/* harmony import */ var _modules_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @modules/logger */ \"./src/renderer/modules/logger.ts\");\n/* harmony import */ var _modules_makelazy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @modules/makelazy */ \"./src/renderer/modules/makelazy.ts\");\n/* harmony import */ var _modules_simplegit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @modules/simplegit */ \"./src/renderer/modules/simplegit.ts\");\n/* harmony import */ var _modules_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modules/storage */ \"./src/renderer/modules/storage.ts\");\n/* harmony import */ var _discord__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./discord */ \"./src/renderer/components/discord.ts\");\n/* harmony import */ var _icons_shield__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./icons/shield */ \"./src/renderer/components/icons/shield.tsx\");\n/* harmony import */ var _icons_update_available__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./icons/update_available */ \"./src/renderer/components/icons/update_available.tsx\");\n/* harmony import */ var _primitives__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./primitives */ \"./src/renderer/components/primitives.tsx\");\n/* harmony import */ var _updates_scss__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./updates.scss */ \"./src/renderer/components/updates.scss\");\n\n\n\n\n\n\n\n\n\n\nconst fs = SettingsNative.requireModule(\"fs\");\nfunction useGitCommand(factory, deps) {\n    const [state, setState] = React.useState({\n        loaded: false,\n        result: null\n    });\n    const handleFetch = ()=>{\n        Promise.resolve(factory()).then((result)=>{\n            setState({\n                loaded: typeof result === \"boolean\" ? true : !!result,\n                result: result\n            });\n        }).catch(console.error);\n    };\n    React.useEffect(handleFetch, deps ?? []);\n    return {\n        ...state,\n        fetch () {\n            setState({\n                loaded: false,\n                result: null\n            });\n            handleFetch();\n        }\n    };\n}\nconst LoadingSpinner = ()=>{\n    const { Spinner  } = _discord__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n    return(/*#__PURE__*/ React.createElement(Spinner, {\n        type: Spinner.Type.LOW_MOTION,\n        className: \"ksu-spinner\"\n    }));\n};\nconst CurrentBranch = (0,_modules_makelazy__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(async ({ gitLoaded  })=>{\n    if (!gitLoaded) return null;\n    const { Link  } = _discord__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n    const branch = await _modules_simplegit__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getBranchName(fs.current);\n    return(/*#__PURE__*/ React.createElement(Link, {\n        href: `https://github.com/strencher-kernel/settings/tree/${branch}`\n    }, branch));\n}, LoadingSpinner);\nconst CurrentCommitHash = (0,_modules_makelazy__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(async ({ gitLoaded  })=>{\n    if (!gitLoaded) return null;\n    const { Text , Link  } = _discord__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n    const hash = await _modules_simplegit__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getLatestCommit(fs.current, await _modules_simplegit__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getBranchName(fs.current));\n    if (hash.hasError) return(/*#__PURE__*/ React.createElement(Text, {\n        color: Text.Colors.RED\n    }, \"error\"));\n    return(/*#__PURE__*/ React.createElement(Link, {\n        href: `https://github.com/strencher-kernel/settings/tree/${hash.full}`\n    }, hash.short));\n}, LoadingSpinner);\nlet needsReload = false;\nfunction UpdaterPanel() {\n    const { Moment  } = _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    const [errorMessage, setError] = React.useState(null);\n    const { Link , Button , Text , Flex , Forms: { FormTitle , FormNotice , FormDivider , FormItem  } , Spinner  } = _discord__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n    const git = useGitCommand(()=>_modules_simplegit__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isInstalled()\n    );\n    const updates = useGitCommand(async ()=>{\n        if (!git.loaded || !git.result) return [];\n        return _modules_simplegit__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getDiff(fs.current);\n    }, [\n        git.loaded\n    ]);\n    const lastUpdate = Moment(_modules_storage__WEBPACK_IMPORTED_MODULE_4__.Storage.use(()=>_modules_storage__WEBPACK_IMPORTED_MODULE_4__.Storage.get(\"updater.lastFetch\", new Date())\n    ));\n    return(/*#__PURE__*/ React.createElement(\"div\", {\n        className: \"kernel-panel\"\n    }, /*#__PURE__*/ React.createElement(FormTitle, {\n        tag: FormTitle.Tags.H1\n    }, \"Updates\"), /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Show, {\n        when: git.loaded,\n        fallback: /*#__PURE__*/ React.createElement(Spinner, {\n            type: Spinner.Type.WANDERING_CUBES\n        })\n    }, /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Show, {\n        when: !git.result\n    }, /*#__PURE__*/ React.createElement(FormNotice, {\n        type: FormNotice.Types.DANGER,\n        className: \"ks-marginBottom20\",\n        title: \"Git installation not found!\",\n        imageData: {\n            src: \"/assets/6e97f6643e7df29b26571d96430e92f4.svg\",\n            width: 60,\n            height: 60\n        },\n        body: /*#__PURE__*/ React.createElement(\"span\", null, \"Currently KernelSettings relies on your local git installation. Please install git to use this updater.\")\n    })), /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Show, {\n        when: errorMessage != null\n    }, /*#__PURE__*/ React.createElement(FormNotice, {\n        type: FormNotice.Types.DANGER,\n        className: \"ks-marginBottom20\",\n        title: \"Error occurred\",\n        imageData: {\n            src: \"/assets/6e97f6643e7df29b26571d96430e92f4.svg\",\n            width: 60,\n            height: 60\n        },\n        body: /*#__PURE__*/ React.createElement(\"span\", null, errorMessage)\n    })), /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Show, {\n        when: errorMessage == null && needsReload\n    }, /*#__PURE__*/ React.createElement(FormNotice, {\n        type: FormNotice.Types.WARNING,\n        className: \"ks-marginBottom20\",\n        title: \"Reload required\",\n        imageData: {\n            src: \"/assets/6e97f6643e7df29b26571d96430e92f4.svg\",\n            width: 60,\n            height: 60\n        },\n        body: /*#__PURE__*/ React.createElement(\"span\", null, \"Client reload is required in order to make changes take affect.\")\n    })), /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Show, {\n        when: git.result\n    }, /*#__PURE__*/ React.createElement(Flex, {\n        className: \"ksu-card\",\n        direction: Flex.Direction.VERTICAL\n    }, /*#__PURE__*/ React.createElement(Flex, {\n        justify: Flex.Justify.BETWEEN,\n        align: Flex.Align.CENTER\n    }, /*#__PURE__*/ React.createElement(Flex, {\n        className: \"ksu-shield-container\",\n        direction: Flex.Direction.HORIZONTAL,\n        align: Flex.Align.START,\n        justify: Flex.Justify.CENTER\n    }, /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Show, {\n        when: updates.loaded,\n        fallback: /*#__PURE__*/ React.createElement(_icons_update_available__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n            width: \"70\",\n            height: \"70\",\n            className: \"ks-update-available ksu-shield\"\n        })\n    }, /*#__PURE__*/ React.createElement(_icons_shield__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        type: updates.result?.length > 0 ? _icons_shield__WEBPACK_IMPORTED_MODULE_6__[\"default\"].Types.WARNING : _icons_shield__WEBPACK_IMPORTED_MODULE_6__[\"default\"].Types.VERIFIED,\n        width: \"70\",\n        height: \"70\",\n        className: `ksu-shield ${updates.result?.length > 0 ? \"ksu-shield-warn\" : \"ksu-shield-ok\"}`\n    })), /*#__PURE__*/ React.createElement(Flex.Child, null, /*#__PURE__*/ React.createElement(Text, {\n        size: Text.Sizes.SIZE_24,\n        color: Text.Colors.HEADER_PRIMARY\n    }, /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Switch, {\n        default: \"Everything is up to date!\"\n    }, /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Match, {\n        when: !updates.loaded\n    }, \"Loading...\"), /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Match, {\n        when: updates.result?.length > 0\n    }, \"Something needs to be updated!\"))), /*#__PURE__*/ React.createElement(Text, {\n        size: Text.Sizes.SIZE_14,\n        color: Text.Colors.HEADER_SECONDARY\n    }, \"Last Checked: \", lastUpdate.calendar()))), /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"ksu-git-info\"\n    }, /*#__PURE__*/ React.createElement(Text, {\n        className: \"ksu-git-info-item\"\n    }, \"Branch: \", /*#__PURE__*/ React.createElement(CurrentBranch, {\n        gitLoaded: !!git.result\n    })), /*#__PURE__*/ React.createElement(Text, {\n        className: \"ksu-git-info-item\"\n    }, \"Commit: \", /*#__PURE__*/ React.createElement(CurrentCommitHash, {\n        gitLoaded: !!git.result\n    })))), /*#__PURE__*/ React.createElement(FormDivider, {\n        className: \"ksu-divider\"\n    }), /*#__PURE__*/ React.createElement(Flex, {\n        direction: Flex.Direction.HORIZONTAL\n    }, /*#__PURE__*/ React.createElement(Button, {\n        disabled: !updates.loaded,\n        color: Button.Colors.BRAND,\n        size: Button.Sizes.SMALL,\n        className: \"ksu-button\",\n        onClick: ()=>{\n            updates.fetch();\n            _modules_storage__WEBPACK_IMPORTED_MODULE_4__.Storage.set(\"updater.lastFetch\", new Date());\n        }\n    }, \"Check for Updates\"), /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Show, {\n        when: updates.result?.length > 0\n    }, /*#__PURE__*/ React.createElement(Button, {\n        disabled: !updates.loaded,\n        color: Button.Colors.YELLOW,\n        size: Button.Sizes.SMALL,\n        className: \"ksu-button\",\n        onClick: ()=>{\n            _modules_simplegit__WEBPACK_IMPORTED_MODULE_3__[\"default\"].executeCmd(\"git pull\", fs.current).then(()=>{\n                needsReload = true;\n                updates.fetch();\n            }).catch((error)=>{\n                _modules_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(\"Updater\", \"Failed to update!\", error);\n                setError(\"Error occurred while updating kernel settings. Check your console (Ctrl/Cmd + Shift + I) and report any errors.\");\n            });\n        }\n    }, \"Update\")), /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Show, {\n        when: needsReload\n    }, /*#__PURE__*/ React.createElement(Button, {\n        color: Button.Colors.GREEN,\n        size: Button.Sizes.SMALL,\n        className: \"ksu-button ksu-reload-button\",\n        onClick: ()=>{\n            window.location.reload();\n        }\n    }, \"Reload \", /*#__PURE__*/ React.createElement(_icons_update_available__WEBPACK_IMPORTED_MODULE_7__[\"default\"], null)))), /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.Show, {\n        when: updates.result?.length > 0\n    }, /*#__PURE__*/ React.createElement(FormDivider, {\n        className: \"ksu-divider\"\n    }), /*#__PURE__*/ React.createElement(FormItem, {\n        title: \"Recent Commits\",\n        tag: \"h5\"\n    }, /*#__PURE__*/ React.createElement(_primitives__WEBPACK_IMPORTED_MODULE_8__.For, {\n        each: updates.result\n    }, (commit, index)=>/*#__PURE__*/ React.createElement(\"div\", {\n            className: \"ksu-commit\",\n            key: index\n        }, /*#__PURE__*/ React.createElement(\"span\", {\n            className: \"ksu-commit-hash\"\n        }, /*#__PURE__*/ React.createElement(Link, {\n            href: `https://github.com/strencher-kernel/settings/commit/${commit.hash}`\n        }, commit.hash_short)), /*#__PURE__*/ React.createElement(\"span\", {\n            className: \"ksu-commit-name\"\n        }, commit.message), /*#__PURE__*/ React.createElement(\"span\", {\n            className: \"ksu-commit-author-label\"\n        }, \" by \"), /*#__PURE__*/ React.createElement(\"span\", {\n            className: \"ksu-commit-author\"\n        }, /*#__PURE__*/ React.createElement(\"img\", {\n            className: \"ksu-commit-author-avatar\",\n            src: `https://github.com/${commit.author}.png?size=20`\n        }), /*#__PURE__*/ React.createElement(\"span\", {\n            className: \"ksu-commit-author-name\"\n        }, commit.author)))\n    ))))))));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/components/updates.tsx\n");

/***/ }),

/***/ "./src/renderer/index.tsx":
/*!********************************!*\
  !*** ./src/renderer/index.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Core\": () => (/* binding */ Core)\n/* harmony export */ });\n/* harmony import */ var _modules_devserver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @modules/devserver */ \"./src/renderer/modules/devserver.ts\");\n/* harmony import */ var _modules_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @modules/events */ \"./src/renderer/modules/events.ts\");\n/* harmony import */ var _modules_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @modules/storage */ \"./src/renderer/modules/storage.ts\");\n/* harmony import */ var _components_panel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/panel */ \"./src/renderer/components/panel.tsx\");\n/* harmony import */ var _components_updates__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/updates */ \"./src/renderer/components/updates.tsx\");\n/* harmony import */ var _modules_logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/logger */ \"./src/renderer/modules/logger.ts\");\n/* harmony import */ var _modules_patcher__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/patcher */ \"./src/renderer/modules/patcher.ts\");\n/* harmony import */ var _modules_settings__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/settings */ \"./src/renderer/modules/settings.ts\");\n/* harmony import */ var _modules_webpack__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/webpack */ \"./src/renderer/modules/webpack.ts\");\n// import KernelPanel from \"./components/panel.js\";\n\n\n\n\n\n\n\n\n\n// import Git from \"./updater/git.js\";\n// import Updater from \"./updater/index.js\";\nconst fs = SettingsNative.requireModule(\"fs\");\nconst path = SettingsNative.requireModule(\"path\");\nvar Core;\n(function(Core1) {\n    let styleElement = null;\n    async function start() {\n        await _modules_webpack__WEBPACK_IMPORTED_MODULE_8__[\"default\"].whenReady;\n        _modules_logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log(\"Core\", \"Started.\");\n        window.React = _modules_webpack__WEBPACK_IMPORTED_MODULE_8__[\"default\"].findByProps(\"createElement\", \"useEffect\");\n        if (true) _modules_devserver__WEBPACK_IMPORTED_MODULE_0__.DevServer.initialize();\n        _modules_settings__WEBPACK_IMPORTED_MODULE_7__.SettingsRenderer.initialize();\n        registerSettings();\n        _modules_storage__WEBPACK_IMPORTED_MODULE_2__.Storage.initialize();\n        loadStyles();\n        exposeGlobals();\n    }\n    Core1.start = start;\n    function registerSettings() {\n        let flush = [\n            _modules_settings__WEBPACK_IMPORTED_MODULE_7__.SettingsRenderer.register(\"Updates\", {\n                render: ()=>/*#__PURE__*/ React.createElement(_components_updates__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null)\n                ,\n                order: 2\n            }),\n            _modules_settings__WEBPACK_IMPORTED_MODULE_7__.SettingsRenderer.register(\"Packages\", {\n                render: ()=>/*#__PURE__*/ React.createElement(_components_panel__WEBPACK_IMPORTED_MODULE_3__[\"default\"], null)\n                ,\n                order: 1\n            })\n        ];\n        _modules_events__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addEventListener(\"reload-core\", ()=>{\n            for(let i = 0; i < flush.length; i++){\n                flush[i]();\n            }\n        });\n    }\n    Core1.registerSettings = registerSettings;\n    function exposeGlobals() {\n        const Dispatcher = _modules_webpack__WEBPACK_IMPORTED_MODULE_8__[\"default\"].findByProps(\"dirtyDispatch\");\n        Object.defineProperties(window, {\n            KernelSettings: {\n                value: Object.freeze(_modules_settings__WEBPACK_IMPORTED_MODULE_7__.SettingsRenderer),\n                configurable: true,\n                writable: true\n            },\n            KernelStorage: {\n                value: Object.freeze(_modules_storage__WEBPACK_IMPORTED_MODULE_2__.Storage),\n                configurable: true,\n                writable: true\n            }\n        });\n        Dispatcher.dirtyDispatch({\n            type: \"KERNEL_SETTINGS_INIT\"\n        });\n    }\n    Core1.exposeGlobals = exposeGlobals;\n    function loadStyles() {\n        const location = path.resolve(fs.current, \"style.css\");\n        if (!fs.isFile(location)) return; // TODO: Bail out\n        const load = function() {\n            const styles = fs.readFile(location, \"utf8\");\n            styleElement = document.head.appendChild(Object.assign(document.createElement(\"style\"), {\n                id: \"kernel-style\",\n                textContent: styles\n            }));\n        };\n        load();\n        _modules_events__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addEventListener(\"reload-css\", ()=>{\n            styleElement.remove();\n            load();\n            _modules_logger__WEBPACK_IMPORTED_MODULE_5__.Logger.log(\"Styles\", \"Reloaded.\");\n        });\n    }\n    Core1.loadStyles = loadStyles;\n    function stop() {\n        _modules_patcher__WEBPACK_IMPORTED_MODULE_6__.Patcher.unpatchAll();\n        styleElement?.remove();\n    }\n    Core1.stop = stop;\n    function getGitInfo() {\n        return;\n    }\n    Core1.getGitInfo = getGitInfo;\n    async function checkForUpdates() {}\n    Core1.checkForUpdates = checkForUpdates;\n})(Core || (Core = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/index.tsx\n");

/***/ }),

/***/ "./src/renderer/modules/devserver.ts":
/*!*******************************************!*\
  !*** ./src/renderer/modules/devserver.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DevServer\": () => (/* binding */ DevServer)\n/* harmony export */ });\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events */ \"./src/renderer/modules/events.ts\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"./src/renderer/modules/logger.ts\");\n\n\nconst fs = SettingsNative.requireModule(\"fs\");\nconst path = SettingsNative.requireModule(\"path\");\nvar DevServer;\n(function(DevServer1) {\n    var ws = DevServer1.ws = null;\n    var expectedClose = DevServer1.expectedClose = false;\n    const tryJSON = function(json) {\n        try {\n            return JSON.parse(json);\n        } catch (error) {\n            return false;\n        }\n    };\n    function close() {\n        if (!ws) return;\n        _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.log(\"DevServer\", \"Closing WebSocket\");\n        DevServer.ws = ws = null;\n    }\n    DevServer1.close = close;\n    function initialize() {\n        const win = window;\n        if (win.KernelDevServer && win.KernelDevServer.ws != null) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.log(\"DevServer\", \"Taking over socket\");\n            ws = DevServer.ws = win.KernelDevServer.ws;\n        } else {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.log(\"DevServer\", \"Loading development server...\");\n            ws = DevServer.ws = new WebSocket(\"ws://localhost:5656\");\n        }\n        win.KernelDevServer = DevServer;\n        ws.onmessage = handleMessage;\n        ws.onerror = (error)=>{\n            _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(\"DevServer\", \"Fatal error:\", error);\n        };\n        ws.onclose = ()=>{\n            DevServer.ws = ws = null;\n            if (!expectedClose) _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(\"DevServer\", \"Connection closed...\");\n        };\n    }\n    DevServer1.initialize = initialize;\n    async function reloadCore() {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.log(\"DevServer\", \"Reloading core...\");\n        _events__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dispatchEvent(new Event(\"reload-core\"));\n        const content = fs.readFile(path.resolve(fs.current, \"renderer.js\"), \"utf8\");\n        const script = document.head.appendChild(Object.assign(document.createElement(\"script\"), {\n            type: \"module\",\n            textContent: content + \";__webpack_exports__Core.start();\",\n            onload: ()=>script.remove()\n        }));\n    }\n    DevServer1.reloadCore = reloadCore;\n    function reloadStyles() {\n        _events__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dispatchEvent(new Event(\"reload-css\"));\n    }\n    DevServer1.reloadStyles = reloadStyles;\n    function reload(type) {\n        switch(type){\n            case \"core\":\n                {\n                    reloadCore();\n                }\n                break;\n            case \"styles\":\n                {\n                    reloadStyles();\n                }\n                break;\n        }\n    }\n    DevServer1.reload = reload;\n    var handleMessage = DevServer1.handleMessage = ({ data  })=>{\n        const message = tryJSON(data);\n        if (!message) return _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.error(\"DevServer\", \"Unable to parse message:\", data);\n        switch(message.operation){\n            case \"HELLO\":\n                {\n                    send(\"HELLO\", {\n                        client: `Discord->${window.DiscordNative.app.getReleaseChannel()}`\n                    });\n                    _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.log(\"DevServer\", \"WS Connected\");\n                }\n                break;\n            case \"RELOAD_STYLES\":\n                {\n                    reloadStyles();\n                }\n                break;\n            case \"RELOAD_CORE\":\n                {\n                    reloadCore();\n                }\n                break;\n            default:\n                {\n                    _logger__WEBPACK_IMPORTED_MODULE_1__.Logger.log(\"DevServer\", \"Unknown operation:\", message.operation);\n                }\n        }\n    };\n    function send(operation, data) {\n        if (!ws) throw \"Tried sending message without connection established\";\n        ws.send(JSON.stringify({\n            operation: operation,\n            data: data\n        }));\n    }\n    DevServer1.send = send;\n})(DevServer || (DevServer = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/modules/devserver.ts\n");

/***/ }),

/***/ "./src/renderer/modules/discord.ts":
/*!*****************************************!*\
  !*** ./src/renderer/modules/discord.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memoize */ \"./src/renderer/modules/memoize.ts\");\n/* harmony import */ var _webpack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webpack */ \"./src/renderer/modules/webpack.ts\");\n\n\nconst DiscordModules = (0,_memoize__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    get Moment () {\n        return _webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findByProps(\"momentProperties\");\n    }\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DiscordModules);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9kaXNjb3JkLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQjtBQUNBO0FBRS9CLEtBQUssQ0FBQ0UsY0FBYyxHQUFHRixvREFBTyxDQUFDLENBQUM7UUFDeEJHLE1BQU0sSUFBRyxDQUFDO1FBQUEsTUFBTSxDQUFDRiw0REFBbUIsQ0FBQyxDQUFrQjtJQUFFLENBQUM7QUFDbEUsQ0FBQztBQUVELGlFQUFlQyxjQUFjLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rZXJuZWwtc2V0dGluZ3MvLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9kaXNjb3JkLnRzP2IzYzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1lbW9pemUgZnJvbSBcIi4vbWVtb2l6ZVwiO1xyXG5pbXBvcnQgV2VicGFjayBmcm9tIFwiLi93ZWJwYWNrXCI7XHJcblxyXG5jb25zdCBEaXNjb3JkTW9kdWxlcyA9IG1lbW9pemUoe1xyXG4gICAgZ2V0IE1vbWVudCgpIHtyZXR1cm4gV2VicGFjay5maW5kQnlQcm9wcyhcIm1vbWVudFByb3BlcnRpZXNcIik7fVxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IERpc2NvcmRNb2R1bGVzOyJdLCJuYW1lcyI6WyJtZW1vaXplIiwiV2VicGFjayIsIkRpc2NvcmRNb2R1bGVzIiwiTW9tZW50IiwiZmluZEJ5UHJvcHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/modules/discord.ts\n");

/***/ }),

/***/ "./src/renderer/modules/events.ts":
/*!****************************************!*\
  !*** ./src/renderer/modules/events.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst Events = new EventTarget();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Events);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9ldmVudHMudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLEtBQUssQ0FBQ0EsTUFBTSxHQUdSLEdBQUcsQ0FBQ0MsV0FBVztBQUVuQixpRUFBZUQsTUFBTSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2VybmVsLXNldHRpbmdzLy4vc3JjL3JlbmRlcmVyL21vZHVsZXMvZXZlbnRzLnRzP2MwZjEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRXZlbnRzOiBFdmVudFRhcmdldCAmIHtcclxuICAgIGFkZEV2ZW50TGlzdGVuZXIoZXZlbnQ6IFwicmVsb2FkLWNzc1wiIHwgXCJyZWxvYWQtY29yZVwiLCBsaXN0ZW5lcjogKGV2ZW50OiBFdmVudCkgPT4gdm9pZCwgb25jZT86IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudDogXCJyZWxvYWQtY3NzXCIgfCBcInJlbG9hZC1jb3JlXCIsIGxpc3RlbmVyOiAoZXZlbnQ6IEV2ZW50KSA9PiB2b2lkKTogdm9pZDtcclxufSA9IG5ldyBFdmVudFRhcmdldCgpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRXZlbnRzOyJdLCJuYW1lcyI6WyJFdmVudHMiLCJFdmVudFRhcmdldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/renderer/modules/events.ts\n");

/***/ }),

/***/ "./src/renderer/modules/logger.ts":
/*!****************************************!*\
  !*** ./src/renderer/modules/logger.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Logger\": () => (/* binding */ Logger)\n/* harmony export */ });\nvar Logger;\n(function(Logger1) {\n    function parseType(type) {\n        switch(type){\n            case \"error\":\n            case \"info\":\n            case \"error\":\n                return type;\n            default:\n                return \"log\";\n        }\n    }\n    function logMessage(type, module, ...message) {\n        console[parseType(type)](`%c[KernelSettings]%c %c[${module}]%c`, \"color: #A8D46B; font-weight: 700;\", \"\", \"color: #A8D46B\", \"\", ...message);\n    }\n    function log(module, ...message) {\n        logMessage(\"log\", module, ...message);\n    }\n    Logger1.log = log;\n    function info(module, ...message) {\n        logMessage(\"info\", module, ...message);\n    }\n    Logger1.info = info;\n    function warn(module, ...message) {\n        logMessage(\"warn\", module, ...message);\n    }\n    Logger1.warn = warn;\n    function error(module, ...message) {\n        logMessage(\"error\", module, ...message);\n    }\n    Logger1.error = error;\n})(Logger || (Logger = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9sb2dnZXIudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLEdBQVM7O2FBR0hBLFNBQVMsQ0FBQ0MsSUFBVyxFQUFVLENBQUM7UUFDckMsTUFBTSxDQUFFQSxJQUFJO1lBQ1IsSUFBSSxDQUFDLENBQU87WUFDWixJQUFJLENBQUMsQ0FBTTtZQUNYLElBQUksQ0FBQyxDQUFPO2dCQUNSLE1BQU0sQ0FBQ0EsSUFBSTs7Z0JBQ04sTUFBTSxDQUFDLENBQUs7O0lBRTdCLENBQUM7YUFFUUMsVUFBVSxDQUFDRCxJQUFXLEVBQUVFLE1BQWMsS0FBS0MsT0FBTyxFQUFlLENBQUM7UUFDdkVDLE9BQU8sQ0FBQ0wsU0FBUyxDQUFDQyxJQUFJLElBQUksd0JBQXdCLEVBQUVFLE1BQU0sQ0FBQyxHQUFHLEdBQUcsQ0FBbUMsb0NBQUUsQ0FBRSxHQUFFLENBQWdCLGlCQUFFLENBQUUsTUFBS0MsT0FBTztJQUM5SSxDQUFDO2FBRWVFLEdBQUcsQ0FBQ0gsTUFBTSxLQUFLQyxPQUFPLEVBQUUsQ0FBQ0Y7UUFBQUEsVUFBVSxDQUFDLENBQUssTUFBRUMsTUFBTSxLQUFLQyxPQUFPO0lBQUUsQ0FBQztZQUFoRUUsR0FBRyxHQUFIQSxHQUFHO2FBQ0hDLElBQUksQ0FBQ0osTUFBTSxLQUFLQyxPQUFPLEVBQUUsQ0FBQ0Y7UUFBQUEsVUFBVSxDQUFDLENBQU0sT0FBRUMsTUFBTSxLQUFLQyxPQUFPO0lBQUUsQ0FBQztZQUFsRUcsSUFBSSxHQUFKQSxJQUFJO2FBQ0pDLElBQUksQ0FBQ0wsTUFBTSxLQUFLQyxPQUFPLEVBQUUsQ0FBQ0Y7UUFBQUEsVUFBVSxDQUFDLENBQU0sT0FBRUMsTUFBTSxLQUFLQyxPQUFPO0lBQUUsQ0FBQztZQUFsRUksSUFBSSxHQUFKQSxJQUFJO2FBQ0pDLEtBQUssQ0FBQ04sTUFBTSxLQUFLQyxPQUFPLEVBQUUsQ0FBQ0Y7UUFBQUEsVUFBVSxDQUFDLENBQU8sUUFBRUMsTUFBTSxLQUFLQyxPQUFPO0lBQUUsQ0FBQztZQUFwRUssS0FBSyxHQUFMQSxLQUFLO0dBcEJSQyxNQUFNLEtBQU5BLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rZXJuZWwtc2V0dGluZ3MvLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9sb2dnZXIudHM/NjRlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgbmFtZXNwYWNlIExvZ2dlciB7XHJcbiAgICB0eXBlIFR5cGVzID0gXCJsb2dcIiB8IFwid2FyblwiIHwgXCJlcnJvclwiIHwgXCJpbmZvXCI7XHJcblxyXG4gICAgZnVuY3Rpb24gcGFyc2VUeXBlKHR5cGU6IFR5cGVzKTogc3RyaW5nIHtcclxuICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSBcImVycm9yXCI6XHJcbiAgICAgICAgICAgIGNhc2UgXCJpbmZvXCI6XHJcbiAgICAgICAgICAgIGNhc2UgXCJlcnJvclwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGU7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IHJldHVybiBcImxvZ1wiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBsb2dNZXNzYWdlKHR5cGU6IFR5cGVzLCBtb2R1bGU6IFN0cmluZywgLi4ubWVzc2FnZTogYW55W10pOiB2b2lkIHtcclxuICAgICAgICBjb25zb2xlW3BhcnNlVHlwZSh0eXBlKV0oYCVjW0tlcm5lbFNldHRpbmdzXSVjICVjWyR7bW9kdWxlfV0lY2AsIFwiY29sb3I6ICNBOEQ0NkI7IGZvbnQtd2VpZ2h0OiA3MDA7XCIsIFwiXCIsIFwiY29sb3I6ICNBOEQ0NkJcIiwgXCJcIiwgLi4ubWVzc2FnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIGxvZyhtb2R1bGUsIC4uLm1lc3NhZ2UpIHtsb2dNZXNzYWdlKFwibG9nXCIsIG1vZHVsZSwgLi4ubWVzc2FnZSk7fVxyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIGluZm8obW9kdWxlLCAuLi5tZXNzYWdlKSB7bG9nTWVzc2FnZShcImluZm9cIiwgbW9kdWxlLCAuLi5tZXNzYWdlKTt9XHJcbiAgICBleHBvcnQgZnVuY3Rpb24gd2Fybihtb2R1bGUsIC4uLm1lc3NhZ2UpIHtsb2dNZXNzYWdlKFwid2FyblwiLCBtb2R1bGUsIC4uLm1lc3NhZ2UpO31cclxuICAgIGV4cG9ydCBmdW5jdGlvbiBlcnJvcihtb2R1bGUsIC4uLm1lc3NhZ2UpIHtsb2dNZXNzYWdlKFwiZXJyb3JcIiwgbW9kdWxlLCAuLi5tZXNzYWdlKTt9XHJcbn0iXSwibmFtZXMiOlsicGFyc2VUeXBlIiwidHlwZSIsImxvZ01lc3NhZ2UiLCJtb2R1bGUiLCJtZXNzYWdlIiwiY29uc29sZSIsImxvZyIsImluZm8iLCJ3YXJuIiwiZXJyb3IiLCJMb2dnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/modules/logger.ts\n");

/***/ }),

/***/ "./src/renderer/modules/makelazy.ts":
/*!******************************************!*\
  !*** ./src/renderer/modules/makelazy.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ makeLazy)\n/* harmony export */ });\nfunction makeLazy(factory, fallback) {\n    return function LazyComponent(props) {\n        const [state, setState] = React.useState({\n            resolved: false,\n            value: void 0\n        });\n        React.useEffect(()=>{\n            if (state.resolved) return;\n            factory(props).then((value)=>{\n                setState({\n                    value,\n                    resolved: true\n                });\n            });\n        }, [\n            state\n        ]);\n        return state.resolved ? state.value : React.createElement(fallback, props);\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9tYWtlbGF6eS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsUUFBUSxDQUFDQSxRQUFRLENBQVVDLE9BQW1DLEVBQUVDLFFBQXFDLEVBQUUsQ0FBQztJQUNuSCxNQUFNLENBQUMsUUFBUSxDQUFDQyxhQUFhLENBQUNDLEtBQVEsRUFBRSxDQUFDO1FBQ3JDLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxRQUFRLElBQUlDLEtBQUssQ0FBQ0MsUUFBUSxDQUFDLENBQUNDO1lBQUFBLFFBQVEsRUFBRSxLQUFLO1lBQUVDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztRQUFBLENBQUM7UUFFekVILEtBQUssQ0FBQ0ksU0FBUyxLQUFPLENBQUM7WUFDbkIsRUFBRSxFQUFFTixLQUFLLENBQUNJLFFBQVEsRUFBRSxNQUFNO1lBRTFCUixPQUFPLENBQUNHLEtBQUssRUFBRVEsSUFBSSxFQUFFRixLQUFLLEdBQUssQ0FBQztnQkFDNUJKLFFBQVEsQ0FBQyxDQUFDSTtvQkFBQUEsS0FBSztvQkFBRUQsUUFBUSxFQUFFLElBQUk7Z0JBQUEsQ0FBQztZQUNwQyxDQUFDO1FBQ0wsQ0FBQyxFQUFFLENBQUNKO1lBQUFBLEtBQUs7UUFBQSxDQUFDO1FBRVYsTUFBTSxDQUFDQSxLQUFLLENBQUNJLFFBQVEsR0FBR0osS0FBSyxDQUFDSyxLQUFLLEdBQUdILEtBQUssQ0FBQ00sYUFBYSxDQUFDWCxRQUFRLEVBQUVFLEtBQUs7SUFDN0UsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rZXJuZWwtc2V0dGluZ3MvLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9tYWtlbGF6eS50cz82MjA1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1ha2VMYXp5PFAgPSBhbnk+KGZhY3Rvcnk6IChwcm9wczogUCkgPT4gUHJvbWlzZTxhbnk+LCBmYWxsYmFjazogUmVhY3QuRnVuY3Rpb25Db21wb25lbnQ8e30+KSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gTGF6eUNvbXBvbmVudChwcm9wczogUCkge1xyXG4gICAgICAgIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gUmVhY3QudXNlU3RhdGUoe3Jlc29sdmVkOiBmYWxzZSwgdmFsdWU6IHZvaWQgMH0pO1xyXG5cclxuICAgICAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoc3RhdGUucmVzb2x2ZWQpIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgIGZhY3RvcnkocHJvcHMpLnRoZW4oKHZhbHVlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBzZXRTdGF0ZSh7dmFsdWUsIHJlc29sdmVkOiB0cnVlfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sIFtzdGF0ZV0pO1xyXG5cclxuICAgICAgICByZXR1cm4gc3RhdGUucmVzb2x2ZWQgPyBzdGF0ZS52YWx1ZSA6IFJlYWN0LmNyZWF0ZUVsZW1lbnQoZmFsbGJhY2ssIHByb3BzKTtcclxuICAgIH07XHJcbn0iXSwibmFtZXMiOlsibWFrZUxhenkiLCJmYWN0b3J5IiwiZmFsbGJhY2siLCJMYXp5Q29tcG9uZW50IiwicHJvcHMiLCJzdGF0ZSIsInNldFN0YXRlIiwiUmVhY3QiLCJ1c2VTdGF0ZSIsInJlc29sdmVkIiwidmFsdWUiLCJ1c2VFZmZlY3QiLCJ0aGVuIiwiY3JlYXRlRWxlbWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/renderer/modules/makelazy.ts\n");

/***/ }),

/***/ "./src/renderer/modules/memoize.ts":
/*!*****************************************!*\
  !*** ./src/renderer/modules/memoize.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ memoize)\n/* harmony export */ });\nfunction memoize(object) {\n    const keys = Object.keys(object);\n    const clone = {};\n    for(let i = 0; i < keys.length; i++){\n        const key = keys[i];\n        const descriptor = Object.getOwnPropertyDescriptor(object, key);\n        if (!descriptor || !descriptor.get) {\n            clone[key] = object[key];\n            continue;\n        }\n        const getter = descriptor.get;\n        let value = undefined;\n        Object.defineProperty(clone, key, {\n            configurable: true,\n            enumerable: true,\n            get () {\n                return value !== undefined ? value : value = getter();\n            }\n        });\n    }\n    return clone;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9tZW1vaXplLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZSxRQUFRLENBQUNBLE9BQU8sQ0FBVUMsTUFBUyxFQUEyQixDQUFDO0lBQzFFLEtBQUssQ0FBQ0MsSUFBSSxHQUFHQyxNQUFNLENBQUNELElBQUksQ0FBQ0QsTUFBTTtJQUMvQixLQUFLLENBQUNHLEtBQUssR0FBRyxDQUFDLENBQUM7SUFFaEIsR0FBRyxDQUFFLEdBQUcsQ0FBQ0MsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHSCxJQUFJLENBQUNJLE1BQU0sRUFBRUQsQ0FBQyxHQUFJLENBQUM7UUFDbkMsS0FBSyxDQUFDRSxHQUFHLEdBQUdMLElBQUksQ0FBQ0csQ0FBQztRQUNsQixLQUFLLENBQUNHLFVBQVUsR0FBR0wsTUFBTSxDQUFDTSx3QkFBd0IsQ0FBQ1IsTUFBTSxFQUFFTSxHQUFHO1FBQzlELEVBQUUsR0FBR0MsVUFBVSxLQUFLQSxVQUFVLENBQUNFLEdBQUcsRUFBRSxDQUFDO1lBQ2pDTixLQUFLLENBQUNHLEdBQUcsSUFBSU4sTUFBTSxDQUFDTSxHQUFHO1lBQ3ZCLFFBQVE7UUFDWixDQUFDO1FBRUQsS0FBSyxDQUFDSSxNQUFNLEdBQUdILFVBQVUsQ0FBQ0UsR0FBRztRQUM3QixHQUFHLENBQUNFLEtBQUssR0FBR0MsU0FBUztRQUNyQlYsTUFBTSxDQUFDVyxjQUFjLENBQUNWLEtBQUssRUFBRUcsR0FBRyxFQUFFLENBQUM7WUFDL0JRLFlBQVksRUFBRSxJQUFJO1lBQ2xCQyxVQUFVLEVBQUUsSUFBSTtZQUNoQk4sR0FBRyxJQUFHLENBQUM7Z0JBQ0gsTUFBTSxDQUFDRSxLQUFLLEtBQUtDLFNBQVMsR0FBR0QsS0FBSyxHQUFJQSxLQUFLLEdBQUdELE1BQU07WUFDeEQsQ0FBQztRQUNMLENBQUM7SUFDTCxDQUFDO0lBRUQsTUFBTSxDQUFDUCxLQUFLO0FBQ2hCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rZXJuZWwtc2V0dGluZ3MvLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9tZW1vaXplLnRzPzBkNDQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVtb2l6ZTxUID0gYW55PihvYmplY3Q6IFQpOiB7W2tleSBpbiBrZXlvZiBUXTogYW55fSB7XHJcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTtcclxuICAgIGNvbnN0IGNsb25lID0ge307XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgY29uc3Qga2V5ID0ga2V5c1tpXTtcclxuICAgICAgICBjb25zdCBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIGtleSk7XHJcbiAgICAgICAgaWYgKCFkZXNjcmlwdG9yIHx8ICFkZXNjcmlwdG9yLmdldCkge1xyXG4gICAgICAgICAgICBjbG9uZVtrZXldID0gb2JqZWN0W2tleV07XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgZ2V0dGVyID0gZGVzY3JpcHRvci5nZXQ7XHJcbiAgICAgICAgbGV0IHZhbHVlID0gdW5kZWZpbmVkO1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjbG9uZSwga2V5LCB7XHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0KCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6ICh2YWx1ZSA9IGdldHRlcigpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBjbG9uZSBhcyBhbnk7XHJcbn07Il0sIm5hbWVzIjpbIm1lbW9pemUiLCJvYmplY3QiLCJrZXlzIiwiT2JqZWN0IiwiY2xvbmUiLCJpIiwibGVuZ3RoIiwia2V5IiwiZGVzY3JpcHRvciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldCIsImdldHRlciIsInZhbHVlIiwidW5kZWZpbmVkIiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/renderer/modules/memoize.ts\n");

/***/ }),

/***/ "./src/renderer/modules/patcher.ts":
/*!*****************************************!*\
  !*** ./src/renderer/modules/patcher.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Patcher\": () => (/* binding */ Patcher)\n/* harmony export */ });\nvar Patcher;\n(function(Patcher1) {\n    const patches = new Set();\n    function patch(module, func, callback, before = false) {\n        const original = module[func];\n        const unpatch = ()=>{\n            module[func] = original;\n        };\n        module[func] = function() {\n            if (before) {\n                try {\n                    Reflect.apply(callback, this, arguments);\n                } catch (error) {\n                    console.error(\"[Kernel:patcher] Error during before patch:\", error);\n                }\n            }\n            let returnValue = Reflect.apply(original, this, arguments);\n            if (before) return returnValue;\n            try {\n                const tempRet = Reflect.apply(callback, this, [\n                    arguments,\n                    returnValue\n                ]);\n                if (tempRet != null) returnValue = tempRet;\n            } catch (error) {\n                console.error(\"[Kernel:patcher] Error during patch:\", error);\n            }\n            return returnValue;\n        };\n        Object.assign(module[func], original, {\n            toString () {\n                return original.toString();\n            }\n        });\n        patches.add(unpatch);\n        return unpatch;\n    }\n    Patcher1.patch = patch;\n    function unpatchAll() {\n        for (const unpatch of patches)unpatch();\n    }\n    Patcher1.unpatchAll = unpatchAll;\n})(Patcher || (Patcher = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9wYXRjaGVyLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxHQUFTOztJQUNaLEtBQUssQ0FBQ0EsT0FBTyxHQUFHLEdBQUcsQ0FBQ0MsR0FBRzthQUlQQyxLQUFLLENBQUNDLE1BQVcsRUFBRUMsSUFBWSxFQUFFQyxRQUF5QixFQUFFQyxNQUFNLEdBQUcsS0FBSyxFQUFFLENBQUM7UUFDekYsS0FBSyxDQUFDQyxRQUFRLEdBQUdKLE1BQU0sQ0FBQ0MsSUFBSTtRQUM1QixLQUFLLENBQUNJLE9BQU8sT0FBUyxDQUFDTDtZQUFBQSxNQUFNLENBQUNDLElBQUksSUFBSUcsUUFBUTtRQUFDLENBQUM7UUFFaERKLE1BQU0sQ0FBQ0MsSUFBSSxJQUFJLFFBQVEsR0FBSSxDQUFDO1lBQ3hCLEVBQUUsRUFBRUUsTUFBTSxFQUFFLENBQUM7Z0JBQ1QsR0FBRyxDQUFDLENBQUM7b0JBQ0RHLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDTCxRQUFRLEVBQUUsSUFBSSxFQUFFTSxTQUFTO2dCQUMzQyxDQUFDLENBQUMsS0FBSyxFQUFFQyxLQUFLLEVBQUUsQ0FBQztvQkFDYkMsT0FBTyxDQUFDRCxLQUFLLENBQUMsQ0FBNkMsOENBQUVBLEtBQUs7Z0JBQ3RFLENBQUM7WUFDTCxDQUFDO1lBRUQsR0FBRyxDQUFDRSxXQUFXLEdBQUdMLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDSCxRQUFRLEVBQUUsSUFBSSxFQUFFSSxTQUFTO1lBQ3pELEVBQUUsRUFBRUwsTUFBTSxFQUFFLE1BQU0sQ0FBQ1EsV0FBVztZQUU5QixHQUFHLENBQUMsQ0FBQztnQkFDRCxLQUFLLENBQUNDLE9BQU8sR0FBR04sT0FBTyxDQUFDQyxLQUFLLENBQUNMLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQ007b0JBQUFBLFNBQVM7b0JBQUVHLFdBQVc7Z0JBQUEsQ0FBQztnQkFDdEUsRUFBRSxFQUFFQyxPQUFPLElBQUksSUFBSSxFQUFFRCxXQUFXLEdBQUdDLE9BQU87WUFDOUMsQ0FBQyxDQUFDLEtBQUssRUFBRUgsS0FBSyxFQUFFLENBQUM7Z0JBQ2JDLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDLENBQXNDLHVDQUFFQSxLQUFLO1lBQy9ELENBQUM7WUFFRCxNQUFNLENBQUNFLFdBQVc7UUFDdEIsQ0FBQztRQUNERSxNQUFNLENBQUNDLE1BQU0sQ0FBQ2QsTUFBTSxDQUFDQyxJQUFJLEdBQUdHLFFBQVEsRUFBRSxDQUFDO1lBQ25DVyxRQUFRLElBQUcsQ0FBQztnQkFBQSxNQUFNLENBQUNYLFFBQVEsQ0FBQ1csUUFBUTtZQUFFLENBQUM7UUFDM0MsQ0FBQztRQUVEbEIsT0FBTyxDQUFDbUIsR0FBRyxDQUFDWCxPQUFPO1FBRW5CLE1BQU0sQ0FBQ0EsT0FBTztJQUNsQixDQUFDO2FBaENlTixLQUFLLEdBQUxBLEtBQUs7YUFrQ0xrQixVQUFVLEdBQUcsQ0FBQztRQUMxQixHQUFHLEVBQUUsS0FBSyxDQUFDWixPQUFPLElBQUlSLE9BQU8sQ0FBRVEsT0FBTztJQUMxQyxDQUFDO2FBRmVZLFVBQVUsR0FBVkEsVUFBVTtHQXZDYkMsT0FBTyxLQUFQQSxPQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2VybmVsLXNldHRpbmdzLy4vc3JjL3JlbmRlcmVyL21vZHVsZXMvcGF0Y2hlci50cz8xNGFiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBuYW1lc3BhY2UgUGF0Y2hlciB7XHJcbiAgICBjb25zdCBwYXRjaGVzID0gbmV3IFNldDxGdW5jdGlvbj4oKTtcclxuXHJcbiAgICB0eXBlIFBhdGNoZXJDYWxsYmFjayA9ICh0aGlzT2JqZWN0OiBhbnksIG1ldGhvZEFyZ3VtZW50czogSUFyZ3VtZW50cywgcmV0dXJuVmFsdWU/OiBhbnkpID0+IGFueTtcclxuXHJcbiAgICBleHBvcnQgZnVuY3Rpb24gcGF0Y2gobW9kdWxlOiBhbnksIGZ1bmM6IHN0cmluZywgY2FsbGJhY2s6IFBhdGNoZXJDYWxsYmFjaywgYmVmb3JlID0gZmFsc2UpIHtcclxuICAgICAgICBjb25zdCBvcmlnaW5hbCA9IG1vZHVsZVtmdW5jXTtcclxuICAgICAgICBjb25zdCB1bnBhdGNoID0gKCkgPT4ge21vZHVsZVtmdW5jXSA9IG9yaWdpbmFsO307XHJcblxyXG4gICAgICAgIG1vZHVsZVtmdW5jXSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKGJlZm9yZSkge1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICBSZWZsZWN0LmFwcGx5KGNhbGxiYWNrLCB0aGlzLCBhcmd1bWVudHMpO1xyXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiW0tlcm5lbDpwYXRjaGVyXSBFcnJvciBkdXJpbmcgYmVmb3JlIHBhdGNoOlwiLCBlcnJvcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGxldCByZXR1cm5WYWx1ZSA9IFJlZmxlY3QuYXBwbHkob3JpZ2luYWwsIHRoaXMsIGFyZ3VtZW50cyk7XHJcbiAgICAgICAgICAgIGlmIChiZWZvcmUpIHJldHVybiByZXR1cm5WYWx1ZTtcclxuXHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wUmV0ID0gUmVmbGVjdC5hcHBseShjYWxsYmFjaywgdGhpcywgW2FyZ3VtZW50cywgcmV0dXJuVmFsdWVdKTtcclxuICAgICAgICAgICAgICAgIGlmICh0ZW1wUmV0ICE9IG51bGwpIHJldHVyblZhbHVlID0gdGVtcFJldDtcclxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJbS2VybmVsOnBhdGNoZXJdIEVycm9yIGR1cmluZyBwYXRjaDpcIiwgZXJyb3IpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gcmV0dXJuVmFsdWU7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBPYmplY3QuYXNzaWduKG1vZHVsZVtmdW5jXSwgb3JpZ2luYWwsIHtcclxuICAgICAgICAgICAgdG9TdHJpbmcoKSB7cmV0dXJuIG9yaWdpbmFsLnRvU3RyaW5nKCl9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHBhdGNoZXMuYWRkKHVucGF0Y2gpO1xyXG5cclxuICAgICAgICByZXR1cm4gdW5wYXRjaDtcclxuICAgIH07XHJcblxyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHVucGF0Y2hBbGwoKSB7XHJcbiAgICAgICAgZm9yIChjb25zdCB1bnBhdGNoIG9mIHBhdGNoZXMpIHVucGF0Y2goKTtcclxuICAgIH07XHJcbn0iXSwibmFtZXMiOlsicGF0Y2hlcyIsIlNldCIsInBhdGNoIiwibW9kdWxlIiwiZnVuYyIsImNhbGxiYWNrIiwiYmVmb3JlIiwib3JpZ2luYWwiLCJ1bnBhdGNoIiwiUmVmbGVjdCIsImFwcGx5IiwiYXJndW1lbnRzIiwiZXJyb3IiLCJjb25zb2xlIiwicmV0dXJuVmFsdWUiLCJ0ZW1wUmV0IiwiT2JqZWN0IiwiYXNzaWduIiwidG9TdHJpbmciLCJhZGQiLCJ1bnBhdGNoQWxsIiwiUGF0Y2hlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/renderer/modules/patcher.ts\n");

/***/ }),

/***/ "./src/renderer/modules/settings.ts":
/*!******************************************!*\
  !*** ./src/renderer/modules/settings.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SettingsRenderer\": () => (/* binding */ SettingsRenderer)\n/* harmony export */ });\n/* harmony import */ var _patcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./patcher */ \"./src/renderer/modules/patcher.ts\");\n/* harmony import */ var _webpack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webpack */ \"./src/renderer/modules/webpack.ts\");\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events */ \"./src/renderer/modules/events.ts\");\n\n\n\nconst win = window;\nvar SettingsRenderer;\n(function(SettingsRenderer1) {\n    let initialized = false;\n    var panels = SettingsRenderer1.panels = win[\"__kernel_settings_cache__\"] ?? [\n        {\n            section: \"DIVIDER\"\n        },\n        {\n            section: \"HEADER\",\n            label: \"Kernel\",\n            id: \"kernel-settings\"\n        }\n    ];\n    function register(name, render) {\n        const panel = {\n            section: `Kernel-${name}`,\n            label: name,\n            id: `kernel-settings-${name}`,\n            className: `kernel-settings`,\n            element: typeof render === \"function\" ? render : render.render,\n            ...typeof render === \"object\" ? render : {}\n        };\n        SettingsRenderer.panels.push(panel);\n        SettingsRenderer.panels.sort((a, b)=>a.order - b.order\n        );\n        return ()=>{\n            const index = SettingsRenderer.panels.indexOf(panel);\n            if (index < 0) return false;\n            SettingsRenderer.panels.splice(index, 1);\n            return true;\n        };\n    }\n    SettingsRenderer1.register = register;\n    async function initialize() {\n        if (initialized) return;\n        initialized = true;\n        const SettingsView = await _webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findLazy(_webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Filters.byDisplayName(\"SettingsView\"));\n        if (!win[\"__kernel_settings_cache__\"]) _patcher__WEBPACK_IMPORTED_MODULE_0__.Patcher.patch(SettingsView.prototype, \"getPredicateSections\", function(_, res) {\n            if (!Array.isArray(res) || !res.some((e)=>e?.section?.toLowerCase() === \"changelog\"\n            ) || res.some((s)=>s?.id === \"kernel-settings\"\n            )) return;\n            const index = res.findIndex((s)=>s?.section?.toLowerCase() === \"changelog\"\n            ) - 1;\n            if (index < 0) return;\n            res.splice(index, 0, ...SettingsRenderer.panels);\n        });\n        _events__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addEventListener(\"reload-core\", ()=>{\n            win[\"__kernel_settings_cache__\"] = panels;\n        });\n    }\n    SettingsRenderer1.initialize = initialize;\n})(SettingsRenderer || (SettingsRenderer = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9zZXR0aW5ncy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWlDO0FBQ0Y7QUFDRjtBQUU3QixLQUFLLENBQUNHLEdBQUcsR0FBR0MsTUFBTTtBQUVYLEdBQVM7O0lBQ1osR0FBRyxDQUFDQyxXQUFXLEdBQUcsS0FBSztRQXNCVkMsTUFBTSxxQkFBTkEsTUFBTSxHQUFjSCxHQUFHLENBQUMsQ0FBMkIsK0JBQUssQ0FBQztRQUNsRSxDQUFDSTtZQUFBQSxPQUFPLEVBQUUsQ0FBUztRQUFBLENBQUM7UUFDcEIsQ0FBQ0E7WUFBQUEsT0FBTyxFQUFFLENBQVE7WUFBRUMsS0FBSyxFQUFFLENBQVE7WUFBRUMsRUFBRSxFQUFFLENBQWlCO1FBQUEsQ0FBQztJQUMvRCxDQUFDO2FBRWVDLFFBQVEsQ0FBQ0MsSUFBWSxFQUFFQyxNQUFpRCxFQUFFLENBQUM7UUFDdkYsS0FBSyxDQUFDQyxLQUFLLEdBQUcsQ0FBQztZQUNYTixPQUFPLEdBQUcsT0FBTyxFQUFFSSxJQUFJO1lBQ3ZCSCxLQUFLLEVBQUVHLElBQUk7WUFDWEYsRUFBRSxHQUFHLGdCQUFnQixFQUFFRSxJQUFJO1lBQzNCRyxTQUFTLEdBQUcsZUFBZTtZQUMzQkMsT0FBTyxFQUFFLE1BQU0sQ0FBQ0gsTUFBTSxLQUFLLENBQVUsWUFBR0EsTUFBTSxHQUFHQSxNQUFNLENBQUNBLE1BQU07ZUFDMUQsTUFBTSxDQUFDQSxNQUFNLEtBQUssQ0FBUSxVQUFHQSxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ2hELENBQUM7UUFFREksZ0JBQWdCLENBQUNWLE1BQU0sQ0FBQ1csSUFBSSxDQUFDSixLQUFLO1FBQ2xDRyxnQkFBZ0IsQ0FBQ1YsTUFBTSxDQUFDWSxJQUFJLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxHQUFLRCxDQUFDLENBQUNFLEtBQUssR0FBR0QsQ0FBQyxDQUFDQyxLQUFLOztRQUV4RCxNQUFNLEtBQU8sQ0FBQztZQUNWLEtBQUssQ0FBQ0MsS0FBSyxHQUFHTixnQkFBZ0IsQ0FBQ1YsTUFBTSxDQUFDaUIsT0FBTyxDQUFDVixLQUFLO1lBQ25ELEVBQUUsRUFBRVMsS0FBSyxHQUFHLENBQUMsRUFBRSxNQUFNLENBQUMsS0FBSztZQUMzQk4sZ0JBQWdCLENBQUNWLE1BQU0sQ0FBQ2tCLE1BQU0sQ0FBQ0YsS0FBSyxFQUFFLENBQUM7WUFDdkMsTUFBTSxDQUFDLElBQUk7UUFDZixDQUFDO0lBQ0wsQ0FBQztzQkFuQmVaLFFBQVEsR0FBUkEsUUFBUTttQkFxQkZlLFVBQVUsR0FBa0IsQ0FBQztRQUMvQyxFQUFFLEVBQUVwQixXQUFXLEVBQUUsTUFBTTtRQUN2QkEsV0FBVyxHQUFHLElBQUk7UUFFbEIsS0FBSyxDQUFDcUIsWUFBWSxHQUFHLEtBQUssQ0FBQ3pCLHlEQUFnQixDQUFDQSxzRUFBNkIsQ0FBQyxDQUFjO1FBRXhGLEVBQUUsR0FBR0UsR0FBRyxDQUFDLENBQTJCLDZCQUFHSCxtREFBYSxDQUFDMEIsWUFBWSxDQUFDSyxTQUFTLEVBQUUsQ0FBc0IsdUJBQUUsUUFBUSxDQUFFQyxDQUFDLEVBQUVDLEdBQUcsRUFBRSxDQUFDO1lBQ3BILEVBQUUsR0FBR0MsS0FBSyxDQUFDQyxPQUFPLENBQUNGLEdBQUcsTUFBTUEsR0FBRyxDQUFDRyxJQUFJLEVBQUNDLENBQUMsR0FBSUEsQ0FBQyxFQUFFOUIsT0FBTyxFQUFFK0IsV0FBVyxPQUFPLENBQVc7aUJBQUtMLEdBQUcsQ0FBQ0csSUFBSSxFQUFDRyxDQUFDLEdBQUlBLENBQUMsRUFBRTlCLEVBQUUsS0FBSyxDQUFpQjtlQUFHLE1BQU07WUFFMUksS0FBSyxDQUFDYSxLQUFLLEdBQUdXLEdBQUcsQ0FBQ08sU0FBUyxFQUFDRCxDQUFDLEdBQUlBLENBQUMsRUFBRWhDLE9BQU8sRUFBRStCLFdBQVcsT0FBTyxDQUFXO2dCQUFJLENBQUM7WUFDL0UsRUFBRSxFQUFFaEIsS0FBSyxHQUFHLENBQUMsRUFBRSxNQUFNO1lBRXJCVyxHQUFHLENBQUNULE1BQU0sQ0FBQ0YsS0FBSyxFQUFFLENBQUMsS0FBS04sZ0JBQWdCLENBQUNWLE1BQU07UUFDbkQsQ0FBQztRQUVESixnRUFBdUIsQ0FBQyxDQUFhLGtCQUFRLENBQUM7WUFDMUNDLEdBQUcsQ0FBQyxDQUEyQiw4QkFBSUcsTUFBTTtRQUM3QyxDQUFDO0lBQ0wsQ0FBQztzQkFsQnFCbUIsVUFBVSxHQUFWQSxVQUFVO0dBakRuQlQsZ0JBQWdCLEtBQWhCQSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rZXJuZWwtc2V0dGluZ3MvLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9zZXR0aW5ncy50cz83Y2E0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGF0Y2hlcn0gZnJvbSBcIi4vcGF0Y2hlclwiO1xyXG5pbXBvcnQgV2VicGFjayBmcm9tIFwiLi93ZWJwYWNrXCI7XHJcbmltcG9ydCBFdmVudHMgZnJvbSBcIi4vZXZlbnRzXCI7XHJcblxyXG5jb25zdCB3aW4gPSB3aW5kb3cgYXMgYW55O1xyXG5cclxuZXhwb3J0IG5hbWVzcGFjZSBTZXR0aW5nc1JlbmRlcmVyIHtcclxuICAgIGxldCBpbml0aWFsaXplZCA9IGZhbHNlO1xyXG5cclxuICAgIGV4cG9ydCB0eXBlIFNlY3Rpb24gPSB7XHJcbiAgICAgICAgc2VjdGlvbjogXCJESVZJREVSXCIgfCBcIkNVU1RPTVwiIHwgc3RyaW5nO1xyXG4gICAgICAgIGVsZW1lbnQ/KCk6IFJlYWN0LlJlYWN0RWxlbWVudDtcclxuICAgICAgICBsYWJlbD86IHN0cmluZztcclxuICAgICAgICBpZD86IHN0cmluZztcclxuICAgICAgICBjbGFzc05hbWU/OiBzdHJpbmc7XHJcbiAgICAgICAgaWNvbj86IFJlYWN0LlJlYWN0RWxlbWVudCB8IHN0cmluZztcclxuICAgICAgICBjb2xvcj86IHN0cmluZztcclxuICAgICAgICBvbkNsaWNrPzogRnVuY3Rpb247XHJcbiAgICAgICAgbmV3SW5kaWNhdG9yPzogYm9vbGVhbjtcclxuICAgICAgICBiYWRnZUNvdW50PzogbnVtYmVyO1xyXG4gICAgICAgIG9yZGVyPzogbnVtYmVyO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgZXhwb3J0IHR5cGUgUGFuZWxPcHRpb25zID0ge1xyXG4gICAgICAgIHJlbmRlcigpOiBSZWFjdC5SZWFjdEVsZW1lbnQ7XHJcbiAgICAgICAgY2xhc3NOYW1lPzogc3RyaW5nO1xyXG4gICAgICAgIG9yZGVyPzogbnVtYmVyO1xyXG4gICAgfTtcclxuXHJcbiAgICBleHBvcnQgY29uc3QgcGFuZWxzOiBTZWN0aW9uW10gPSB3aW5bXCJfX2tlcm5lbF9zZXR0aW5nc19jYWNoZV9fXCJdID8/IFtcclxuICAgICAgICB7c2VjdGlvbjogXCJESVZJREVSXCJ9LFxyXG4gICAgICAgIHtzZWN0aW9uOiBcIkhFQURFUlwiLCBsYWJlbDogXCJLZXJuZWxcIiwgaWQ6IFwia2VybmVsLXNldHRpbmdzXCJ9XHJcbiAgICBdO1xyXG5cclxuICAgIGV4cG9ydCBmdW5jdGlvbiByZWdpc3RlcihuYW1lOiBzdHJpbmcsIHJlbmRlcjogKCgpID0+IFJlYWN0LlJlYWN0RWxlbWVudCkgfCBQYW5lbE9wdGlvbnMpIHtcclxuICAgICAgICBjb25zdCBwYW5lbCA9IHtcclxuICAgICAgICAgICAgc2VjdGlvbjogYEtlcm5lbC0ke25hbWV9YCxcclxuICAgICAgICAgICAgbGFiZWw6IG5hbWUsXHJcbiAgICAgICAgICAgIGlkOiBga2VybmVsLXNldHRpbmdzLSR7bmFtZX1gLFxyXG4gICAgICAgICAgICBjbGFzc05hbWU6IGBrZXJuZWwtc2V0dGluZ3NgLFxyXG4gICAgICAgICAgICBlbGVtZW50OiB0eXBlb2YgcmVuZGVyID09PSBcImZ1bmN0aW9uXCIgPyByZW5kZXIgOiByZW5kZXIucmVuZGVyLFxyXG4gICAgICAgICAgICAuLi4odHlwZW9mIHJlbmRlciA9PT0gXCJvYmplY3RcIiA/IHJlbmRlciA6IHt9KVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIFNldHRpbmdzUmVuZGVyZXIucGFuZWxzLnB1c2gocGFuZWwpO1xyXG4gICAgICAgIFNldHRpbmdzUmVuZGVyZXIucGFuZWxzLnNvcnQoKGEsIGIpID0+IGEub3JkZXIgLSBiLm9yZGVyKTtcclxuXHJcbiAgICAgICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBTZXR0aW5nc1JlbmRlcmVyLnBhbmVscy5pbmRleE9mKHBhbmVsKTtcclxuICAgICAgICAgICAgaWYgKGluZGV4IDwgMCkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICBTZXR0aW5nc1JlbmRlcmVyLnBhbmVscy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuXHJcbiAgICBleHBvcnQgYXN5bmMgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgICAgICBpZiAoaW5pdGlhbGl6ZWQpIHJldHVybjtcclxuICAgICAgICBpbml0aWFsaXplZCA9IHRydWU7XHJcblxyXG4gICAgICAgIGNvbnN0IFNldHRpbmdzVmlldyA9IGF3YWl0IFdlYnBhY2suZmluZExhenkoV2VicGFjay5GaWx0ZXJzLmJ5RGlzcGxheU5hbWUoXCJTZXR0aW5nc1ZpZXdcIikpO1xyXG4gICAgXHJcbiAgICAgICAgaWYgKCF3aW5bXCJfX2tlcm5lbF9zZXR0aW5nc19jYWNoZV9fXCJdKSBQYXRjaGVyLnBhdGNoKFNldHRpbmdzVmlldy5wcm90b3R5cGUsIFwiZ2V0UHJlZGljYXRlU2VjdGlvbnNcIiwgZnVuY3Rpb24gKF8sIHJlcykge1xyXG4gICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkocmVzKSB8fCAhcmVzLnNvbWUoZSA9PiBlPy5zZWN0aW9uPy50b0xvd2VyQ2FzZSgpID09PSBcImNoYW5nZWxvZ1wiKSB8fCByZXMuc29tZShzID0+IHM/LmlkID09PSBcImtlcm5lbC1zZXR0aW5nc1wiKSkgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSByZXMuZmluZEluZGV4KHMgPT4gcz8uc2VjdGlvbj8udG9Mb3dlckNhc2UoKSA9PT0gXCJjaGFuZ2Vsb2dcIikgLSAxO1xyXG4gICAgICAgICAgICBpZiAoaW5kZXggPCAwKSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICByZXMuc3BsaWNlKGluZGV4LCAwLCAuLi5TZXR0aW5nc1JlbmRlcmVyLnBhbmVscyk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIEV2ZW50cy5hZGRFdmVudExpc3RlbmVyKFwicmVsb2FkLWNvcmVcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICB3aW5bXCJfX2tlcm5lbF9zZXR0aW5nc19jYWNoZV9fXCJdID0gcGFuZWxzO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxufSJdLCJuYW1lcyI6WyJQYXRjaGVyIiwiV2VicGFjayIsIkV2ZW50cyIsIndpbiIsIndpbmRvdyIsImluaXRpYWxpemVkIiwicGFuZWxzIiwic2VjdGlvbiIsImxhYmVsIiwiaWQiLCJyZWdpc3RlciIsIm5hbWUiLCJyZW5kZXIiLCJwYW5lbCIsImNsYXNzTmFtZSIsImVsZW1lbnQiLCJTZXR0aW5nc1JlbmRlcmVyIiwicHVzaCIsInNvcnQiLCJhIiwiYiIsIm9yZGVyIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiaW5pdGlhbGl6ZSIsIlNldHRpbmdzVmlldyIsImZpbmRMYXp5IiwiRmlsdGVycyIsImJ5RGlzcGxheU5hbWUiLCJwYXRjaCIsInByb3RvdHlwZSIsIl8iLCJyZXMiLCJBcnJheSIsImlzQXJyYXkiLCJzb21lIiwiZSIsInRvTG93ZXJDYXNlIiwicyIsImZpbmRJbmRleCIsImFkZEV2ZW50TGlzdGVuZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/modules/settings.ts\n");

/***/ }),

/***/ "./src/renderer/modules/simplegit.ts":
/*!*******************************************!*\
  !*** ./src/renderer/modules/simplegit.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Git)\n/* harmony export */ });\nconst period = \"@@@===@@@\";\nconst commitFields = [\n    \"hash\",\n    \"hash_short\",\n    \"author\",\n    \"date\",\n    \"message\"\n];\nconst hashFields = [\n    \"short\",\n    \"full\"\n];\nconst runJS = SettingsNative.requireModule(\"run\");\nclass Git {\n    static executeCmd(cmd, cwd) {\n        return runJS(`new Promise((resolve, reject) => {\n            require(\"child_process\").exec(${JSON.stringify(cmd)}, {\n                cwd: ${JSON.stringify(cwd)}\n            }, (error, res) => {\n                if (error) return reject(error);\n                \n                resolve(res);\n            });\n        })`);\n    }\n    static async isInstalled() {\n        try {\n            await this.executeCmd(\"git --version\");\n            return true;\n        } catch  {\n            return false;\n        }\n    }\n    static async isRepo(cwd) {\n        try {\n            const result = await this.executeCmd(\"git rev-parse --is-inside-work-tree\", cwd);\n            return result === \"true\";\n        } catch  {\n            return false;\n        }\n    }\n    static async getBranchName(cwd) {\n        try {\n            const result = await this.executeCmd(\"git branch -a\", cwd);\n            if (!result) return null;\n            return result.slice(2, result.indexOf(\"\\n\"));\n        } catch (error) {\n            console.error(error);\n            return null;\n        }\n    }\n    static async getLatestCommit(cwd, target = \"master\") {\n        try {\n            return this.parsePeriods(hashFields, await this.executeCmd(`git log -1 ${target} --pretty=format:\"%h${period}%H\"`, cwd));\n        } catch (error) {\n            console.error(error);\n            return {\n                hasError: true\n            };\n        }\n    }\n    static async getDiff(cwd, target = \"master\") {\n        try {\n            const result = await this.executeCmd(`git log ${target}..origin/${target} --pretty=format:\"%H${period}%h${period}%an${period}%ar${period}%s\"`, cwd);\n            if (!result) return [];\n            return result.split(\"\\n\").map((p)=>this.parsePeriods(commitFields, p)\n            );\n        } catch (error) {\n            console.error(error);\n            return [];\n        }\n    }\n    static parsePeriods(fields, out) {\n        return Object.fromEntries(out.split(period).map((c, i)=>[\n                fields[i],\n                c\n            ]\n        ));\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUMsU0FBUyxFQUFFQSxNQUFNLENBQUMsb0JBQW9CLEVBQUVyQixNQUFNLENBQUMsRUFBRSxFQUFFQSxNQUFNLENBQUMsR0FBRyxFQUFFQSxNQUFNLENBQUMsR0FBRyxFQUFFQSxNQUFNLENBQUMsR0FBRyxHQUFHUyxHQUFHO1lBQ2xKLEVBQUUsR0FBR0ssTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDdEIsTUFBTSxDQUFDQSxNQUFNLENBQUNXLEtBQUssQ0FBQyxDQUFJLEtBQUVDLEdBQUcsRUFBQ0MsQ0FBQyxHQUFJLElBQUksQ0FBQ0wsWUFBWSxDQUFDckIsWUFBWSxFQUFFMEIsQ0FBQzs7UUFDeEUsQ0FBQyxDQUFDLEtBQUssRUFBRVQsS0FBSyxFQUFFLENBQUM7WUFDYkMsT0FBTyxDQUFDRCxLQUFLLENBQUNBLEtBQUs7WUFDbkIsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUNiLENBQUM7SUFDTCxDQUFDO1dBRU1JLFlBQVksQ0FBQ00sTUFBZ0IsRUFBRUMsR0FBVyxFQUFFLENBQUM7UUFDaEQsTUFBTSxDQUFDQyxNQUFNLENBQUNDLFdBQVcsQ0FBQ0YsR0FBRyxDQUFDSixLQUFLLENBQUN6QixNQUFNLEVBQUUwQixHQUFHLEVBQUVNLENBQUMsRUFBRUMsQ0FBQyxHQUFLLENBQUNMO2dCQUFBQSxNQUFNLENBQUNLLENBQUM7Z0JBQUdELENBQUM7WUFBQSxDQUFDOztJQUM1RSxDQUFDOztBQWxFbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rZXJuZWwtc2V0dGluZ3MvLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9zaW1wbGVnaXQudHM/NGM3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwZXJpb2QgPSBcIkBAQD09PUBAQFwiO1xyXG5jb25zdCBjb21taXRGaWVsZHMgPSBbXCJoYXNoXCIsIFwiaGFzaF9zaG9ydFwiLCBcImF1dGhvclwiLCBcImRhdGVcIiwgXCJtZXNzYWdlXCJdO1xyXG5jb25zdCBoYXNoRmllbGRzID0gW1wic2hvcnRcIiwgXCJmdWxsXCJdO1xyXG5cclxuY29uc3QgcnVuSlMgPSBTZXR0aW5nc05hdGl2ZS5yZXF1aXJlTW9kdWxlKFwicnVuXCIpO1xyXG5cclxuZXhwb3J0IHR5cGUgQ29tbWl0ID0ge1xyXG4gICAgaGFzaD86IHN0cmluZyxcclxuICAgIGhhc2hfc2hvcnQ/OiBzdHJpbmc7XHJcbiAgICBhdXRob3I/OiBzdHJpbmc7XHJcbiAgICBkYXRlPzogc3RyaW5nO1xyXG4gICAgbWVzc2FnZT86IHN0cmluZztcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdpdCB7XHJcbiAgICBzdGF0aWMgZXhlY3V0ZUNtZChjbWQ6IHN0cmluZywgY3dkPzogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICAgICAgICByZXR1cm4gcnVuSlMoYG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgcmVxdWlyZShcImNoaWxkX3Byb2Nlc3NcIikuZXhlYygke0pTT04uc3RyaW5naWZ5KGNtZCl9LCB7XHJcbiAgICAgICAgICAgICAgICBjd2Q6ICR7SlNPTi5zdHJpbmdpZnkoY3dkKX1cclxuICAgICAgICAgICAgfSwgKGVycm9yLCByZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuIHJlamVjdChlcnJvcik7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSlgKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgaXNJbnN0YWxsZWQoKTogUHJvbWlzZTxib29sZWFuPiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgYXdhaXQgdGhpcy5leGVjdXRlQ21kKFwiZ2l0IC0tdmVyc2lvblwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfSBjYXRjaCB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGlzUmVwbyhjd2Q6IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj4ge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuZXhlY3V0ZUNtZChcImdpdCByZXYtcGFyc2UgLS1pcy1pbnNpZGUtd29yay10cmVlXCIsIGN3ZCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0ID09PSBcInRydWVcIjtcclxuICAgICAgICB9IGNhdGNoIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgZ2V0QnJhbmNoTmFtZShjd2Q6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5leGVjdXRlQ21kKFwiZ2l0IGJyYW5jaCAtYVwiLCBjd2QpO1xyXG4gICAgICAgICAgICBpZiAoIXJlc3VsdCkgcmV0dXJuIG51bGw7XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0LnNsaWNlKDIsIHJlc3VsdC5pbmRleE9mKFwiXFxuXCIpKTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBnZXRMYXRlc3RDb21taXQoY3dkOiBzdHJpbmcsIHRhcmdldDogc3RyaW5nID0gXCJtYXN0ZXJcIik6IFByb21pc2U8e3Nob3J0Pzogc3RyaW5nLCBmdWxsPzogc3RyaW5nLCBoYXNFcnJvcj86IGJvb2xlYW59PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VQZXJpb2RzKGhhc2hGaWVsZHMsIGF3YWl0IHRoaXMuZXhlY3V0ZUNtZChgZ2l0IGxvZyAtMSAke3RhcmdldH0gLS1wcmV0dHk9Zm9ybWF0OlwiJWgke3BlcmlvZH0lSFwiYCwgY3dkKSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICAgICAgICAgIHJldHVybiB7aGFzRXJyb3I6IHRydWV9O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgZ2V0RGlmZihjd2Q6IHN0cmluZywgdGFyZ2V0OiBzdHJpbmcgPSBcIm1hc3RlclwiKTogUHJvbWlzZTxDb21taXRbXT4ge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuZXhlY3V0ZUNtZChgZ2l0IGxvZyAke3RhcmdldH0uLm9yaWdpbi8ke3RhcmdldH0gLS1wcmV0dHk9Zm9ybWF0OlwiJUgke3BlcmlvZH0laCR7cGVyaW9kfSVhbiR7cGVyaW9kfSVhciR7cGVyaW9kfSVzXCJgLCBjd2QpO1xyXG4gICAgICAgICAgICBpZiAoIXJlc3VsdCkgcmV0dXJuIFtdO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0LnNwbGl0KFwiXFxuXCIpLm1hcChwID0+IHRoaXMucGFyc2VQZXJpb2RzKGNvbW1pdEZpZWxkcywgcCkpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xyXG4gICAgICAgICAgICByZXR1cm4gW107XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBwYXJzZVBlcmlvZHMoZmllbGRzOiBzdHJpbmdbXSwgb3V0OiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKG91dC5zcGxpdChwZXJpb2QpLm1hcCgoYywgaSkgPT4gW2ZpZWxkc1tpXSwgY10pKTtcclxuICAgIH1cclxufSJdLCJuYW1lcyI6WyJwZXJpb2QiLCJjb21taXRGaWVsZHMiLCJoYXNoRmllbGRzIiwicnVuSlMiLCJTZXR0aW5nc05hdGl2ZSIsInJlcXVpcmVNb2R1bGUiLCJHaXQiLCJleGVjdXRlQ21kIiwiY21kIiwiY3dkIiwiSlNPTiIsInN0cmluZ2lmeSIsImlzSW5zdGFsbGVkIiwiaXNSZXBvIiwicmVzdWx0IiwiZ2V0QnJhbmNoTmFtZSIsInNsaWNlIiwiaW5kZXhPZiIsImVycm9yIiwiY29uc29sZSIsImdldExhdGVzdENvbW1pdCIsInRhcmdldCIsInBhcnNlUGVyaW9kcyIsImhhc0Vycm9yIiwiZ2V0RGlmZiIsInNwbGl0IiwibWFwIiwicCIsImZpZWxkcyIsIm91dCIsIk9iamVjdCIsImZyb21FbnRyaWVzIiwiYyIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/modules/simplegit.ts\n");

/***/ }),

/***/ "./src/renderer/modules/storage.ts":
/*!*****************************************!*\
  !*** ./src/renderer/modules/storage.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Storage\": () => (/* binding */ Storage)\n/* harmony export */ });\nconst fs = SettingsNative.requireModule(\"fs\");\nconst path = SettingsNative.requireModule(\"path\");\nvar Storage;\n(function(Storage1) {\n    var listeners = Storage1.listeners = new Set();\n    var location = Storage1.location = \"\";\n    var groups = Storage1.groups = new Map();\n    function tryJSON(json) {\n        try {\n            return JSON.parse(json);\n        } catch (error) {\n            return error;\n        }\n    }\n    function emit(...args) {\n        const callbacks = [\n            ...listeners\n        ];\n        for(let i = 0; i < callbacks.length; i++){\n            try {\n                callbacks[i](...args);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    }\n    Storage1.emit = emit;\n    function on(listener) {\n        listeners.add(listener);\n        return off.bind(listener);\n    }\n    Storage1.on = on;\n    function off(listener) {\n        return listeners.delete(listener);\n    }\n    Storage1.off = off;\n    function use(factory) {\n        const [state, setState] = React.useState(factory());\n        React.useEffect(()=>{\n            const remove = on(()=>{\n                setState(factory());\n            });\n            return ()=>void remove()\n            ;\n        }, []);\n        return state;\n    }\n    Storage1.use = use;\n    function initialize() {\n        location = Storage.location = path.resolve(fs.current, \"..\", \"..\", \"..\", \"storage\", \"settings\");\n        if (!fs.exists(location)) {\n            try {\n                fs.createDir(location, {\n                    recursive: true\n                });\n            } catch (error) {\n                return console.error(error);\n            }\n        }\n        for(let files = fs.readDir(location, \"utf8\"), i = 0; i < files.length; i++){\n            const file = files[i];\n            if (!fs.stats(path.join(location, file)).isFile() || !file.endsWith(\".json\")) continue;\n            const group = file.slice(0, file.indexOf(\".json\"));\n            groups.set(group, tryJSON(fs.readFile(path.join(location, file), \"utf8\")));\n        }\n    }\n    Storage1.initialize = initialize;\n    function get(group, def = null) {\n        if (~group.indexOf(\".\")) {\n            const [id, ...paths] = group.split(\".\");\n            return paths.reduce((curr, name)=>curr?.[name]\n            , groups.get(id) ?? def);\n        }\n        return groups.get(group) ?? def;\n    }\n    Storage1.get = get;\n    function set(group, data) {\n        if (~group.indexOf(\".\")) {\n            const [id, ...paths] = group.split(\".\");\n            group = id;\n            const prop = paths.pop();\n            const stored = groups.get(id);\n            if (stored != null) {\n                const object = paths.reduce((curr, name)=>curr?.[name]\n                , groups.get(id));\n                if (object == null) throw new Error(\"Group path not found!\");\n                object[prop] = data;\n            } else {\n                const tree = paths.reduce((curr, name)=>{\n                    if (!curr[name]) curr[name] = {};\n                    return curr[name];\n                }, {});\n                tree[prop] = data;\n                groups.set(id, tree);\n            }\n        } else {\n            groups.set(group, data);\n        }\n        fs.writeFile(path.join(Storage.location, group + \".json\"), JSON.stringify(groups.get(group), null, \"\\t\"));\n        emit(group);\n    }\n    Storage1.set = set;\n})(Storage || (Storage = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDRCxJQUFJLENBQUNDLElBQUk7Z0JBQ3BCLENBQUMsRUFBRSxDQUFDLENBQUM7Z0JBRUxPLElBQUksQ0FBQ0wsSUFBSSxJQUFJRCxJQUFJO2dCQUNqQnRELE1BQU0sQ0FBQzRDLEdBQUcsQ0FBQ0ksRUFBRSxFQUFFWSxJQUFJO1lBQ3ZCLENBQUM7UUFDTCxDQUFDLE1BQU0sQ0FBQztZQUNKNUQsTUFBTSxDQUFDNEMsR0FBRyxDQUFDSCxLQUFLLEVBQUVhLElBQUk7UUFDMUIsQ0FBQztRQUVEN0QsRUFBRSxDQUFDb0UsU0FBUyxDQUFDakUsSUFBSSxDQUFDMEMsSUFBSSxDQUFDVixPQUFPLENBQUM3QixRQUFRLEVBQUUwQyxLQUFLLEdBQUcsQ0FBTyxTQUFHckMsSUFBSSxDQUFDMEQsU0FBUyxDQUFDOUQsTUFBTSxDQUFDOEMsR0FBRyxDQUFDTCxLQUFLLEdBQUcsSUFBSSxFQUFFLENBQUk7UUFDdkdsQyxJQUFJLENBQUNrQyxLQUFLO0lBQ2QsQ0FBQzthQTVCZUcsR0FBRyxHQUFIQSxHQUFHO0dBM0VOaEIsT0FBTyxLQUFQQSxPQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2VybmVsLXNldHRpbmdzLy4vc3JjL3JlbmRlcmVyL21vZHVsZXMvc3RvcmFnZS50cz8wZjA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtEaXJlbnR9IGZyb20gXCJmc1wiO1xyXG5cclxuY29uc3QgZnMgPSBTZXR0aW5nc05hdGl2ZS5yZXF1aXJlTW9kdWxlKFwiZnNcIik7XHJcbmNvbnN0IHBhdGggPSBTZXR0aW5nc05hdGl2ZS5yZXF1aXJlTW9kdWxlKFwicGF0aFwiKTtcclxuXHJcbmV4cG9ydCBuYW1lc3BhY2UgU3RvcmFnZSB7XHJcbiAgICBleHBvcnQgbGV0IGxpc3RlbmVyczogU2V0PEZ1bmN0aW9uPiA9IG5ldyBTZXQoKTtcclxuICAgIGV4cG9ydCBsZXQgbG9jYXRpb24gPSBcIlwiO1xyXG4gICAgZXhwb3J0IGNvbnN0IGdyb3VwczogTWFwPHN0cmluZywgYW55PiA9IG5ldyBNYXAoKTtcclxuXHJcbiAgICBmdW5jdGlvbiB0cnlKU09OKGpzb246IHN0cmluZykge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKGpzb24pO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIGV4cG9ydCBmdW5jdGlvbiBlbWl0KC4uLmFyZ3M6IGFueVtdKSB7XHJcbiAgICAgICAgY29uc3QgY2FsbGJhY2tzID0gWy4uLmxpc3RlbmVyc107XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRyeSB7Y2FsbGJhY2tzW2ldKC4uLmFyZ3MpO31cclxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7Y29uc29sZS5lcnJvcihlcnJvcik7fVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIG9uKGxpc3RlbmVyOiBGdW5jdGlvbik6ICgpID0+IGJvb2xlYW4ge1xyXG4gICAgICAgIGxpc3RlbmVycy5hZGQobGlzdGVuZXIpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2ZmLmJpbmQobGlzdGVuZXIpO1xyXG4gICAgfTtcclxuXHJcbiAgICBleHBvcnQgZnVuY3Rpb24gb2ZmKGxpc3RlbmVyOiBGdW5jdGlvbik6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBsaXN0ZW5lcnMuZGVsZXRlKGxpc3RlbmVyKTtcclxuICAgIH07XHJcblxyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHVzZTxUPihmYWN0b3J5OiAoKSA9PiBUKTogVCB7XHJcbiAgICAgICAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSBSZWFjdC51c2VTdGF0ZShmYWN0b3J5KCkpO1xyXG5cclxuICAgICAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCByZW1vdmUgPSBvbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBzZXRTdGF0ZShmYWN0b3J5KCkpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiAoKSA9PiB2b2lkIHJlbW92ZSgpO1xyXG4gICAgICAgIH0sIFtdKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHN0YXRlO1xyXG4gICAgfTtcclxuIFxyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIGluaXRpYWxpemUoKTogdm9pZCB7XHJcbiAgICAgICAgbG9jYXRpb24gPSBTdG9yYWdlLmxvY2F0aW9uID0gcGF0aC5yZXNvbHZlKGZzLmN1cnJlbnQsIFwiLi5cIiwgXCIuLlwiLCBcIi4uXCIsIFwic3RvcmFnZVwiLCBcInNldHRpbmdzXCIpO1xyXG4gICAgICAgIGlmICghZnMuZXhpc3RzKGxvY2F0aW9uKSkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgZnMuY3JlYXRlRGlyKGxvY2F0aW9uLCB7cmVjdXJzaXZlOiB0cnVlfSk7XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvciAobGV0IGZpbGVzID0gZnMucmVhZERpcihsb2NhdGlvbiwgXCJ1dGY4XCIpLCBpID0gMDsgaSA8IGZpbGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpbGUgPSBmaWxlc1tpXSBhcyBzdHJpbmc7XHJcbiAgICAgICAgICAgIGlmICghZnMuc3RhdHMocGF0aC5qb2luKGxvY2F0aW9uLCBmaWxlKSkuaXNGaWxlKCkgfHwgIWZpbGUuZW5kc1dpdGgoXCIuanNvblwiKSkgY29udGludWU7XHJcbiAgICAgICAgICAgIGNvbnN0IGdyb3VwID0gZmlsZS5zbGljZSgwLCBmaWxlLmluZGV4T2YoXCIuanNvblwiKSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBncm91cHMuc2V0KGdyb3VwLCB0cnlKU09OKGZzLnJlYWRGaWxlKHBhdGguam9pbihsb2NhdGlvbiwgZmlsZSksIFwidXRmOFwiIGFzIGFueSkgYXMgc3RyaW5nKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBleHBvcnQgZnVuY3Rpb24gZ2V0KGdyb3VwOiBzdHJpbmcsIGRlZiA9IG51bGwpIHtcclxuICAgICAgICBpZiAofmdyb3VwLmluZGV4T2YoXCIuXCIpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IFtpZCwgLi4ucGF0aHNdID0gZ3JvdXAuc3BsaXQoXCIuXCIpO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHBhdGhzLnJlZHVjZSgoY3VyciwgbmFtZSkgPT4gY3Vycj8uW25hbWVdLCBncm91cHMuZ2V0KGlkKSA/PyBkZWYpO1xyXG4gICAgICAgIH0gXHJcblxyXG4gICAgICAgIHJldHVybiBncm91cHMuZ2V0KGdyb3VwKSA/PyBkZWY7XHJcbiAgICB9O1xyXG5cclxuICAgIGV4cG9ydCBmdW5jdGlvbiBzZXQoZ3JvdXA6IHN0cmluZywgZGF0YTogYW55KSB7XHJcbiAgICAgICAgaWYgKH5ncm91cC5pbmRleE9mKFwiLlwiKSkge1xyXG4gICAgICAgICAgICBjb25zdCBbaWQsIC4uLnBhdGhzXSA9IGdyb3VwLnNwbGl0KFwiLlwiKTtcclxuICAgICAgICAgICAgZ3JvdXAgPSBpZDtcclxuICAgICAgICAgICAgY29uc3QgcHJvcCA9IHBhdGhzLnBvcCgpO1xyXG4gICAgICAgICAgICBjb25zdCBzdG9yZWQgPSBncm91cHMuZ2V0KGlkKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmIChzdG9yZWQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgb2JqZWN0ID0gcGF0aHMucmVkdWNlKChjdXJyLCBuYW1lKSA9PiBjdXJyPy5bbmFtZV0sIGdyb3Vwcy5nZXQoaWQpKTtcclxuICAgICAgICAgICAgICAgIGlmIChvYmplY3QgPT0gbnVsbCkgdGhyb3cgbmV3IEVycm9yKFwiR3JvdXAgcGF0aCBub3QgZm91bmQhXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgIG9iamVjdFtwcm9wXSA9IGRhdGE7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB0cmVlID0gcGF0aHMucmVkdWNlKChjdXJyLCBuYW1lKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjdXJyW25hbWVdKSBjdXJyW25hbWVdID0ge307XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjdXJyW25hbWVdO1xyXG4gICAgICAgICAgICAgICAgfSwge30pO1xyXG5cclxuICAgICAgICAgICAgICAgIHRyZWVbcHJvcF0gPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgZ3JvdXBzLnNldChpZCwgdHJlZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBncm91cHMuc2V0KGdyb3VwLCBkYXRhKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZzLndyaXRlRmlsZShwYXRoLmpvaW4oU3RvcmFnZS5sb2NhdGlvbiwgZ3JvdXAgKyBcIi5qc29uXCIpLCBKU09OLnN0cmluZ2lmeShncm91cHMuZ2V0KGdyb3VwKSwgbnVsbCwgXCJcXHRcIikpO1xyXG4gICAgICAgIGVtaXQoZ3JvdXApO1xyXG4gICAgfTtcclxufSJdLCJuYW1lcyI6WyJmcyIsIlNldHRpbmdzTmF0aXZlIiwicmVxdWlyZU1vZHVsZSIsInBhdGgiLCJsaXN0ZW5lcnMiLCJTZXQiLCJsb2NhdGlvbiIsImdyb3VwcyIsIk1hcCIsInRyeUpTT04iLCJqc29uIiwiSlNPTiIsInBhcnNlIiwiZXJyb3IiLCJlbWl0IiwiYXJncyIsImNhbGxiYWNrcyIsImkiLCJsZW5ndGgiLCJjb25zb2xlIiwib24iLCJsaXN0ZW5lciIsImFkZCIsIm9mZiIsImJpbmQiLCJkZWxldGUiLCJ1c2UiLCJmYWN0b3J5Iiwic3RhdGUiLCJzZXRTdGF0ZSIsIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJyZW1vdmUiLCJpbml0aWFsaXplIiwiU3RvcmFnZSIsInJlc29sdmUiLCJjdXJyZW50IiwiZXhpc3RzIiwiY3JlYXRlRGlyIiwicmVjdXJzaXZlIiwiZmlsZXMiLCJyZWFkRGlyIiwiZmlsZSIsInN0YXRzIiwiam9pbiIsImlzRmlsZSIsImVuZHNXaXRoIiwiZ3JvdXAiLCJzbGljZSIsImluZGV4T2YiLCJzZXQiLCJyZWFkRmlsZSIsImdldCIsImRlZiIsImlkIiwicGF0aHMiLCJzcGxpdCIsInJlZHVjZSIsImN1cnIiLCJuYW1lIiwiZGF0YSIsInByb3AiLCJwb3AiLCJzdG9yZWQiLCJvYmplY3QiLCJFcnJvciIsInRyZWUiLCJ3cml0ZUZpbGUiLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/modules/storage.ts\n");

/***/ }),

/***/ "./src/renderer/modules/webpack.ts":
/*!*****************************************!*\
  !*** ./src/renderer/modules/webpack.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Filters\": () => (/* binding */ Filters),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// @ts-nocheck\nif (typeof Array.prototype.at !== \"function\") {\n    Array.prototype.at = function(index) {\n        return index < 0 ? this[this.length - Math.abs(index)] : this[index];\n    };\n}\nif (typeof setImmediate === \"undefined\") {\n    window.setImmediate = (callback)=>setTimeout(callback, 0)\n    ;\n}\nclass Filters {\n    static byProps(...props) {\n        return (module)=>props.every((prop)=>prop in module\n            )\n        ;\n    }\n    static byDisplayName(name, def = false) {\n        return (module)=>(def ? module = module.default : module) && typeof module === \"function\" && module.displayName === name\n        ;\n    }\n    static byTypeString(...strings) {\n        return (module)=>module.type && (module = module.type?.toString()) && strings.every((str)=>module.indexOf(str) > -1\n            )\n        ;\n    }\n}\nclass WebpackModule {\n    #listeners = new Set();\n    get Filters() {\n        return Filters;\n    }\n    get chunkName() {\n        return \"webpackChunkdiscord_app\";\n    }\n    get id() {\n        return Symbol(\"kernel-settings\");\n    }\n    constructor(){\n        this.cache = null;\n        this.whenReady = this.waitForGlobal.then(()=>new Promise(async (onReady)=>{\n                const [Dispatcher, { ActionTypes  } = {}, UserStore] = await this.findByProps([\n                    \"dirtyDispatch\"\n                ], [\n                    \"API_HOST\",\n                    \"ActionTypes\"\n                ], [\n                    \"getCurrentUser\",\n                    \"_dispatchToken\"\n                ], {\n                    cache: false,\n                    bulk: true,\n                    wait: true,\n                    forever: true\n                });\n                if (UserStore.getCurrentUser()) return onReady();\n                const listener = function() {\n                    Dispatcher.unsubscribe(ActionTypes.START_SESSION, listener);\n                    Dispatcher.unsubscribe(ActionTypes.CONNECTION_OPEN, listener);\n                    onReady();\n                };\n                Dispatcher.subscribe(ActionTypes.START_SESSION, listener);\n                Dispatcher.subscribe(ActionTypes.CONNECTION_OPEN, listener);\n            })\n        );\n        this.whenReady.then(()=>{\n            let originalPush = window[this.chunkName].push;\n            const handlePush = (chunk)=>{\n                const [, modules] = chunk;\n                for(const moduleId in modules){\n                    const originalModule = modules[moduleId];\n                    modules[moduleId] = (...args)=>{\n                        const [, exports] = args;\n                        originalModule.apply(originalModule, args);\n                        const listeners = [\n                            ...this.#listeners\n                        ];\n                        for(let i = 0; i < listeners.length; i++){\n                            try {\n                                listeners[i](exports);\n                            } catch (error) {\n                                console.error(\"[Webpack]\", \"Could not fire callback listener:\", error);\n                            }\n                        }\n                    };\n                    Object.assign(modules[moduleId], originalModule, {\n                        toString: originalModule.toString.bind(originalModule),\n                        __original: originalModule\n                    });\n                }\n                return originalPush.apply(window[this.chunkName], [\n                    chunk\n                ]);\n            };\n            Object.defineProperty(window[this.chunkName], \"push\", {\n                configurable: true,\n                get: ()=>handlePush\n                ,\n                set: (newPush)=>{\n                    originalPush = newPush;\n                    Object.defineProperty(window[this.chunkName], \"push\", {\n                        value: handlePush,\n                        configurable: true,\n                        writable: true\n                    });\n                }\n            });\n        });\n    }\n    addListener(listener) {\n        this.#listeners.add(listener);\n        return ()=>{\n            this.#listeners.delete(listener);\n        };\n    }\n    removeListener(listener) {\n        return this.#listeners.delete(listener);\n    }\n    findLazy(filter) {\n        const fromCache = this.findModule(filter);\n        if (fromCache) return Promise.resolve(fromCache);\n        return new Promise((resolve)=>{\n            const listener = (m)=>{\n                const directMatch = filter(m);\n                if (directMatch) {\n                    resolve(m);\n                    return void remove();\n                }\n                if (!m.default) return;\n                const defaultMatch = filter(m.default);\n                if (!defaultMatch) return;\n                resolve(m.default);\n                remove();\n            };\n            const remove = this.addListener(listener);\n        });\n    }\n    async waitFor(filter, { retries =100 , all =false , forever =false , delay =50  } = {}) {\n        for(let i = 0; i < retries || forever; i++){\n            const module = this.findModule(filter, {\n                all,\n                cache: false\n            });\n            if (module) return module;\n            await new Promise((res)=>setTimeout(res, delay)\n            );\n        }\n    }\n    parseOptions(args, filter = (thing)=>typeof thing === \"object\" && thing != null && !Array.isArray(thing)\n    ) {\n        return [\n            args,\n            filter(args.at(-1)) ? args.pop() : {}\n        ];\n    }\n    request(cache = true) {\n        if (cache && this.cache) return this.cache;\n        let req = undefined;\n        if (Array.isArray(window[this.chunkName])) {\n            const chunk = [\n                [\n                    this.id\n                ],\n                {},\n                (__nested_webpack_require_5855__)=>req = __nested_webpack_require_5855__\n            ];\n            webpackChunkdiscord_app.push(chunk);\n            webpackChunkdiscord_app.splice(webpackChunkdiscord_app.indexOf(chunk), 1);\n        }\n        if (cache) this.cache = req;\n        return req;\n    }\n    findModule(filter, { all =false , cache =true , force =false , default: defaultExports = false  } = {}) {\n        if (typeof filter !== \"function\") return void 0;\n        const __nested_webpack_require_6308__ = this.request(cache);\n        const found = [];\n        let hasError = null;\n        if (!__nested_webpack_require_6308__) return;\n        const wrapFilter = function(module, index) {\n            try {\n                return filter(module, index);\n            } catch (error) {\n                hasError ??= error;\n                return false;\n            }\n        };\n        for(const id in __nested_webpack_require_6308__.c){\n            const module = __nested_webpack_require_6308__.c[id].exports;\n            if (!module || module === window) continue;\n            switch(typeof module){\n                case \"object\":\n                    {\n                        if (wrapFilter(module, id)) {\n                            if (!all) return module;\n                            found.push(module);\n                        }\n                        if (module.__esModule && module.default != null && typeof module.default !== \"number\" && wrapFilter(module.default, id)) {\n                            const exports = defaultExports ? module : module.default;\n                            if (!all) return exports;\n                            found.push(exports);\n                        }\n                        if (force && module.__esModule) for(const key in module){\n                            if (!module[key]) continue;\n                            if (wrapFilter(module[key], id)) {\n                                if (!all) return module[key];\n                                found.push(module[key]);\n                            }\n                        }\n                        break;\n                    }\n                case \"function\":\n                    {\n                        if (wrapFilter(module, id)) {\n                            if (!all) return module;\n                            found.push(module);\n                        }\n                        break;\n                    }\n            }\n        }\n        if (hasError) {\n            setImmediate(()=>{\n                console.warn(\"[Webpack] filter threw an error. This can cause lag spikes at the user's end. Please fix asap.\\n\\n\", hasError);\n            });\n        }\n        return all ? found : found[0];\n    }\n    findModules(filter) {\n        return this.findModule(filter, {\n            all: true\n        });\n    }\n    bulk(...options) {\n        const [filters, { wait =false , ...rest }] = this.parseOptions(options);\n        const found = new Array(filters.length);\n        const searchFunction = wait ? this.waitFor : this.findModule;\n        const wrappedFilters = filters.map((filter)=>{\n            if (Array.isArray(filter)) filter = Filters.byProps(...filter);\n            if (typeof filter === \"string\") filter = Filters.byDisplayName(filter);\n            return (m)=>{\n                try {\n                    return filter(m);\n                } catch (error) {\n                    return false;\n                }\n            };\n        });\n        const returnValue = searchFunction.call(this, (module)=>{\n            for(let i = 0; i < wrappedFilters.length; i++){\n                const filter = wrappedFilters[i];\n                if (typeof filter !== \"function\" || !filter(module) || found[i] != null) continue;\n                found[i] = module;\n            }\n            return found.filter(String).length === filters.length;\n        }, rest);\n        if (wait) return returnValue.then(()=>found\n        );\n        return found;\n    }\n    findByProps(...options) {\n        const [props, { bulk =false , wait =false , ...rest }] = this.parseOptions(options);\n        if (!bulk && !wait) {\n            return this.findModule(Filters.byProps(...props), rest);\n        }\n        if (wait && !bulk) {\n            return this.waitFor(Filters.byProps(...props), rest);\n        }\n        if (bulk) {\n            const filters = props.map((propsArray)=>Filters.byProps(...propsArray)\n            ).concat({\n                wait,\n                ...rest\n            });\n            return this.bulk(...filters);\n        }\n        return null;\n    }\n    findByDisplayName(...options) {\n        const [displayNames, { bulk =false , wait =false , ...rest }] = this.parseOptions(options);\n        if (!bulk && !wait) {\n            return this.findModule(Filters.byDisplayName(displayNames[0]), rest);\n        }\n        if (wait && !bulk) {\n            return this.waitFor(Filters.byDisplayName(displayNames[0]), rest);\n        }\n        if (bulk) {\n            const filters = displayNames.map(filters.map(Filters.byDisplayName)).concat({\n                wait,\n                cache\n            });\n            return this.bulk(...filters);\n        }\n        return null;\n    }\n    findIndex(filter) {\n        let foundIndex = -1;\n        this.findModule((module, index)=>{\n            if (filter(module)) foundIndex = index;\n        });\n        return foundIndex;\n    }\n    atIndex(index) {\n        return this.request(true)?.c[index];\n    }\n    get waitForGlobal() {\n        return new Promise(async (onExists)=>{\n            while(!Array.isArray(window[this.chunkName])){\n                await new Promise(setImmediate);\n            }\n            onExists();\n        });\n    }\n    /**@deprecated Use Webpack.whenReady.then(() => {}) instead. */ async wait(callback = null) {\n        return this.whenReady.then(()=>{\n            typeof callback === \"function\" && callback();\n        });\n    }\n    /**@deprecated Use Webpack.whenReady.then(() => {}) instead. */ get whenExists() {\n        return this.waitForGlobal;\n    }\n    /**@deprecated Use Webpack.whenReady.then(() => {}) instead. */ on(event, listener) {\n        switch(event){\n            case \"LOADED\":\n                return this.whenReady.then(listener);\n        }\n    }\n    /**@deprecated @see Webpack.on */ get once() {\n        return this.on;\n    }\n}\nconst Webpack = new WebpackModule;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Webpack);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/modules/webpack.ts\n");

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval-source-map devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./src/renderer/index.tsx");
/******/ var __webpack_exports__Core = __webpack_exports__.Core;
/******/ export { __webpack_exports__Core as Core };
/******/ 
